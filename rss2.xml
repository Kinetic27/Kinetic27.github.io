<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kinetic&#39;s BLOG</title>
    <link>http://kinetic27.github.io/</link>
    
    <image>
      <url>https://www.gravatar.com/avatar/d5718ac72bd5a603766369912a4f6851</url>
      <title>Kinetic&#39;s BLOG</title>
      <link>http://kinetic27.github.io/</link>
    </image>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>키네틱의 블로그입니다</description>
    <pubDate>Sun, 03 Jan 2021 07:41:16 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>2021년 회고와 새해 다짐</title>
      <link>http://kinetic27.github.io/2021/01/01/happy-new-2021/</link>
      <guid>http://kinetic27.github.io/2021/01/01/happy-new-2021/</guid>
      <pubDate>Fri, 01 Jan 2021 13:56:47 GMT</pubDate>
      <description>
      
        &lt;p&gt;2021년 되고난 후 써보는 2020년 돌아보기&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>2021년 되고난 후 써보는 2020년 돌아보기</p><a id="more"></a><h1 id="2020년에-뭐-했더라"><a href="#2020년에-뭐-했더라" class="headerlink" title="2020년에 뭐 했더라"></a>2020년에 뭐 했더라</h1><hr><h2 id="1-입시"><a href="#1-입시" class="headerlink" title="1. 입시"></a>1. 입시</h2><p>2020년에는 드디어 입시가 끝났습니다!</p><p>입시가 막 끝나고 온라인 수업으로 학교도 전환했다보니 시간이 많아져서 못했던 활동들을 많이 할 수 있었습니다.</p><p>하루종일 집에만 박혀있으면서 힐링하느랴 건강도 많이 좋아진 것 같아요.</p><h2 id="2-웹-공부"><a href="#2-웹-공부" class="headerlink" title="2. 웹 공부"></a>2. 웹 공부</h2><p>예전에 잠깐 기초만 해봤던 웹을 다시 배우고싶어서 <strong>Html5 + Css3</strong> 책을 구매해서 읽고있습니다.</p><p><img src="1.png" alt="Do it Html5 + Css3 웹 표준의 정석"></p><p><strong>Do it</strong> 시리즈를 예전에 잘 읽었던 기억이 있어서 이 책을 구매해보게 되었습니다.</p><p><a href="https://developer.mozilla.org/ko/docs/Learn" rel="external nofollow noopener noreferrer" target="_blank">모질라 웹 배우기</a>도 같이 읽고 있는데, 정리가 잘 된 문서라서 읽기 좋았습니다.</p><p>마침 제가 들어가는 학교가 웹을 가르치는 과목이 있다보니 미리 어느정도 배워두면 도움이 될 것 같습니다.</p><h2 id="3-게임-개발"><a href="#3-게임-개발" class="headerlink" title="3. 게임 개발"></a>3. 게임 개발</h2><p>모자란 실력이지만 게임 개발팀에 합류하여 유니티를 이용하여 간단한 게임 제작에 참여하게 되었습니다.</p><p><code>유니티</code>와 <code>C#</code> 자체를 거의 다뤄본적 없기 때문에 계속 찾아가면서 공부했습니다.</p><p>아직 완전히 공개를 안한 게임이라 나중에 출시가 끝나고나서 다시 기록을 남겨야 할 것 같습니다.</p><hr><h1 id="2021년-계획과-목표"><a href="#2021년-계획과-목표" class="headerlink" title="2021년 계획과 목표"></a>2021년 계획과 목표</h1><hr><h2 id="1-대학교-공부-열심히하기"><a href="#1-대학교-공부-열심히하기" class="headerlink" title="1. 대학교 공부 열심히하기"></a>1. 대학교 공부 열심히하기</h2><p>고등학교때는 솔직히 공부에 많이 소홀했습니다.  </p><p>대학생활은 공부를 중점적으로 다뤄야 앞으로 뭐라도 할게 생기지 않을까…</p><p>그리고 장학금에 성적이 걸려있다보니 어느정도 성적도 나와야 부담을 조금 덜 것 같습니다.</p><h2 id="2-알고리즘-공부-본격적으로-시작하기"><a href="#2-알고리즘-공부-본격적으로-시작하기" class="headerlink" title="2. 알고리즘 공부 본격적으로 시작하기"></a>2. 알고리즘 공부 본격적으로 시작하기</h2><p>적어도 기업 코테를 통과할 수 있을 정도의 실력을 만들고 싶습니다.</p><p>현재는 그냥 개발하면서 얻은 잡지식으로 쉬운 문제를 푸는 정도인데 실력을 키워서 여러 문제를 풀어보고 싶습니다.</p><h2 id="3-운동하기"><a href="#3-운동하기" class="headerlink" title="3. 운동하기"></a>3. 운동하기</h2><p>온라인 수업으로 학교가 전환되면서 분명 잠에 관한 문제는 해결되었지만 <code>의자 - 침대 - 식탁</code> 동선으로 생활하다보니 팔 근육량이 좀 없는 것 같습니다.</p><p>죽지 않으려면 어느정도 운동을 해야할 것 같습니다.</p><h2 id="4-면허-따기"><a href="#4-면허-따기" class="headerlink" title="4. 면허 따기"></a>4. 면허 따기</h2><p>2종 면허를 따고싶어서 책을사서 필기를 공부하고 있습니다.</p><p>아마  1주일 안에 필기시험을 보러가고 장내 연습을 할 것 같은데 운전을 잘 할 수 있을지 모르겠습니다.</p><p>아마 이게 제일 먼저 이룰 목표가 되지 않을까 합니다.</p><hr><p><span style="color:orange;">모두 새해 복 많이 받으시고 커밋 열심히 하시길!!</span></p>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2021/01/01/happy-new-2021/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Level 2, 카카오 블라인드 채용] 프로그래머스 문자열 압축 코틀린 풀이</title>
      <link>http://kinetic27.github.io/2020/12/16/2020-kakao-blind-recruitment-string-compression/</link>
      <guid>http://kinetic27.github.io/2020/12/16/2020-kakao-blind-recruitment-string-compression/</guid>
      <pubDate>Wed, 16 Dec 2020 13:55:59 GMT</pubDate>
      <description>
      
        &lt;p&gt;[Level 2, 카카오 블라인드 채용] 프로그래머스 문자열 압축 코틀린 풀이&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>[Level 2, 카카오 블라인드 채용] 프로그래머스 문자열 압축 코틀린 풀이</p><a id="more"></a><hr><h1 id="문제-소개"><a href="#문제-소개" class="headerlink" title="문제 소개"></a>문제 소개</h1><p>이번에 풀어볼 <a href="https://programmers.co.kr/learn/courses/30/lessons/60057" rel="external nofollow noopener noreferrer" target="_blank">문제</a>는 문자열 압축입니다.</p><p><img src="problem.png" alt="problem"></p><p>몇가지 패턴으로 중복되는 문자열들을 주고 겹치는 문자들은 몇번 겹치는지 숫자로 표기해서 압축을 시킵니다.</p><p>문제를 읽고나니 조금 특이한 <a href="https://ko.wikipedia.org/wiki/%EB%9F%B0_%EB%A0%9D%EC%8A%A4_%EB%B6%80%ED%98%B8%ED%99%94" rel="external nofollow noopener noreferrer" target="_blank">런 렝스 부호화</a>라는 것을 알 수 있습니다.</p><p>런 렝스 부호화는 1개의 단위로 문자열을 자르지만 이 문제에서는 1개 <code>이상</code>의 단위로 문자열을 자르는 것이죠 </p><hr><h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><hr><h2 id="잘라"><a href="#잘라" class="headerlink" title="잘라!"></a>잘라!</h2><p>먼저 문제에서 시키는대로 문자열을 잘라봅시다</p><p>원본 문자열이 <code>&quot;ababcdcdababcdcd&quot;</code> 라면 글자수가 16글자니 자르는 방법도 16개가 있겠군요.</p><p>하지만 잘 생각해보면 원본 문자열 글자수의 절반 이상은 생각할 필요가 없습니다.</p><p>저 문자열을 8글자를 초과해서 자른다면 <code>&quot;ababcdcda&quot;</code>, <code>&quot;babcdcd&quot;</code> 와 같이 항상 <strong>두개</strong>로 쪼개지게 되는데 뒤의 문자열이 항상 앞의 문자열보다 짧기 때문에 절대로 겹치는 일이 없으니 생각할 필요가 없습니다.</p><p>그럼 이제 <code>1</code> ~ <code>문자열길이의 절반</code>을 돌면서 전부 압축해보고 글자수를 비교하면 되는데</p><p>가장 처음 해야할건 문자열 자르기입니다.</p><p>2단위로 문자열을 자른다면 <code>[[&quot;a&quot;, &quot;b&quot;], [&quot;a&quot;, &quot;b&quot;], [&quot;c&quot;, &quot;d&quot;], [&quot;c&quot;, &quot;d&quot;], [&quot;a&quot;, &quot;b&quot;], [&quot;a&quot;, &quot;b&quot;], [&quot;c&quot;, &quot;d&quot;], [&quot;c&quot;, &quot;d&quot;]]</code> 처럼 잘라야합니다.</p><p>직접 반복을 돌면서 이렇게 구하거나 다른 로직으로 답을 구할 수도 있지만 Kotlin에는 <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/chunked.html" rel="external nofollow noopener noreferrer" target="_blank">chunked</a>라는 엄청난 함수가 존재하기 때문에 이 방법으로 문제를 풀어볼겁니다.</p><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Want to split a collection into a list of lists with custom size? Use the &quot;chunked&quot; function: <a href="https://t.co/KzxOw6x3s1" rel="external nofollow noopener noreferrer" target="_blank">https://t.co/KzxOw6x3s1</a><br>Need a list of sliding window snapshots with overlap (and custom step size)? Use &quot;windowed&quot;: <a href="https://t.co/mQ59SmshHB" rel="external nofollow noopener noreferrer" target="_blank">https://t.co/mQ59SmshHB</a><br>They can also apply transformations directly! <a href="https://t.co/2KsBAXuUnJ" rel="external nofollow noopener noreferrer" target="_blank">pic.twitter.com/2KsBAXuUnJ</a></p>&mdash; Kotlin (@kotlin) <a href="https://twitter.com/kotlin/status/1331611113750990851?ref_src=twsrc%5Etfw" rel="external nofollow noopener noreferrer" target="_blank">November 25, 2020</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><p>문자열을 자르는건 이 함수를 사용하면 매우 간단합니다.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// (1..s.length/2)하면 문자열 길이 짧은건 (1..0)되어서 오류떠서 +1로 간단하게 처리함</span></span><br><span class="line">(<span class="number">1</span>..s.length/<span class="number">2</span> + <span class="number">1</span>).forEach &#123; r -&gt;</span><br><span class="line">  <span class="keyword">val</span> chunk = s.chunked(r)</span><br><span class="line">  <span class="comment">// 변수에 담아두자</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>–</p><h2 id="체크-압축"><a href="#체크-압축" class="headerlink" title="체크! 압축!"></a>체크! 압축!</h2><p>반복을 체크할 차례입니다.</p><p><img src="1.png" alt="고고"></p><p>먼저 두번째부터 돌면서 앞에것과 같은지 체크합니다.</p><p><img src="2.png" alt="앞에꺼랑 다르면 컷"></p><p>앞에꺼랑 다르다는건 바로 앞의 단어들이 겹친거니 합쳐줍니다.</p><p>이 과정을 반복해주면 압축이 됩니다.</p><p>저는 <code>map</code>을 이용하여 이 부분을 만들건데 겹치지 않으면 <code>&quot;&quot;</code>,  겹친다면 <code>&quot;2ab&quot;</code>처럼 압축된 문자열을 반환을 시키고 마지막에<br><code>[&quot;&quot;, &quot;2ab&quot;, &quot;&quot;, &quot;2cd&quot;, &quot;&quot;, &quot;2ab&quot;, &quot;&quot;, &quot;2cd&quot;]</code>처럼 만들어진 배열을 <code>.joinToString(&quot;&quot;)</code>를 이용해서 <code>&quot;2ab2cd2ab2cd&quot;</code>처럼 압축된 문자열을 만들면 됩니다.</p><p>이때 <code>count</code>라는 변수를 하나 만들어서 몇번 반복되었는지 담아두었다가 압축시에 사용하면 됩니다.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> value = <span class="string">"<span class="subst">$&#123;if (count == <span class="number">1</span>) <span class="string">""</span> else count.toString()&#125;</span><span class="subst">$&#123;chunk[index]&#125;</span>"</span></span><br></pre></td></tr></table></figure><p>압축된 문자열을 반환하는 부분에서는 <code>if</code>를 사용하여 <code>1</code>인경우는 생략시켰습니다.<br>문자열 템플릿 밖에서 <code>if</code>를 통해서 처리해도 되지만 전 문자열 템플릿 안에서 <code>if</code>를 사용하여 추가해보았습니다.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>..s.length/<span class="number">2</span> + <span class="number">1</span>).forEach &#123; r -&gt;</span><br><span class="line">    <span class="keyword">val</span> chunk = s.chunked(r)</span><br><span class="line">    <span class="keyword">var</span> count = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> compressedStr = (chunk.subList(<span class="number">1</span>, chunk.size) + <span class="string">""</span>).mapIndexed &#123; index, str -&gt;</span><br><span class="line">        <span class="keyword">when</span> (str) &#123;</span><br><span class="line">            chunk[index] -&gt; &#123;</span><br><span class="line">                count++</span><br><span class="line">                <span class="string">""</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> -&gt; &#123;</span><br><span class="line">                    <span class="keyword">val</span> value = <span class="string">"<span class="subst">$&#123;if (count == <span class="number">1</span>) <span class="string">""</span> else count.toString()&#125;</span><span class="subst">$&#123;chunk[index]&#125;</span>"</span></span><br><span class="line">                    count = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                    value</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;.joinToString(<span class="string">""</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="최소"><a href="#최소" class="headerlink" title="최소!"></a>최소!</h1><p>저희가 필요한건 압축된 문자열이 아니라 몇글자인지만 가져오면 되니까 위의 코드를 살짝 수정해서 정답 함수를 만들면 됩니다.</p><p><code>map</code>을 이용해서 <code>list</code>형태로 모아버리면 <code>min()</code>을 이용해서 최소값을 쉽게 구할 수 있습니다.<br>따라서 처음에 </p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(s: <span class="type">String</span>)</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">    (<span class="number">1</span>..s.length/<span class="number">2</span> + <span class="number">1</span>).forEach &#123; r -&gt;</span><br><span class="line">        TODO()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>으로 짰던 코드를</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(s: <span class="type">String</span>)</span></span>: <span class="built_in">Int</span> = (<span class="number">1</span>..s.length/<span class="number">2</span> + <span class="number">1</span>).map &#123; r -&gt;</span><br><span class="line">        TODO()</span><br><span class="line">    &#125;.min()!!</span><br></pre></td></tr></table></figure><p>로 바꿨습니다.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(s: <span class="type">String</span>)</span></span>: <span class="built_in">Int</span> = (<span class="number">1</span>..s.length/<span class="number">2</span> + <span class="number">1</span>).map &#123; r -&gt;</span><br><span class="line">    <span class="keyword">val</span> chunk = s.chunked(r)</span><br><span class="line">    <span class="keyword">var</span> count = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    (chunk.subList(<span class="number">1</span>, chunk.size) + <span class="string">""</span>).mapIndexed &#123; index, str -&gt;</span><br><span class="line">      <span class="keyword">when</span> (str) &#123;</span><br><span class="line">        chunk[index] -&gt; &#123;</span><br><span class="line">        count++</span><br><span class="line">        <span class="string">""</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> -&gt; &#123;</span><br><span class="line">                    <span class="keyword">val</span> value = <span class="string">"<span class="subst">$&#123;if (count == <span class="number">1</span>) <span class="string">""</span> else count.toString()&#125;</span><span class="subst">$&#123;chunk[index]&#125;</span>"</span></span><br><span class="line">                    count = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                    value</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.joinToString(<span class="string">""</span>).length <span class="comment">// 글자수만 리턴해주기</span></span><br><span class="line">    &#125;.min()!! <span class="comment">// map으로 list형태로 모아서 min()을 이용해서 최소값 구하기</span></span><br></pre></td></tr></table></figure><p>완성!</p><hr><h1 id="정답-코드"><a href="#정답-코드" class="headerlink" title="정답 코드"></a>정답 코드</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(s: <span class="type">String</span>)</span></span>: <span class="built_in">Int</span> = (<span class="number">1</span>..s.length/<span class="number">2</span> + <span class="number">1</span>).map &#123; r -&gt;</span><br><span class="line">        <span class="keyword">val</span> chunk = s.chunked(r)</span><br><span class="line">        <span class="keyword">var</span> count = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        (chunk.subList(<span class="number">1</span>, chunk.size) + <span class="string">""</span>).mapIndexed &#123; index, str -&gt;</span><br><span class="line">            <span class="keyword">when</span> (str) &#123;</span><br><span class="line">                chunk[index] -&gt; &#123;</span><br><span class="line">                    count++</span><br><span class="line">                    <span class="string">""</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> -&gt; &#123;</span><br><span class="line">                    <span class="keyword">val</span> value = <span class="string">"<span class="subst">$&#123;if (count == <span class="number">1</span>) <span class="string">""</span> else count.toString()&#125;</span><span class="subst">$&#123;chunk[index]&#125;</span>"</span></span><br><span class="line">                    count = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                    value</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.joinToString(<span class="string">""</span>).length</span><br><span class="line">    &#125;.min()!!</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>지나가다가 우연히 알게되었던 <code>chunked()</code>함수를 활용해볼 수 있어서 좋았습니다.</p><blockquote><p>출처: 프로그래머스 코딩 테스트 연습, <a href="https://programmers.co.kr/learn/challenges" rel="external nofollow noopener noreferrer" target="_blank">https://programmers.co.kr/learn/challenges</a></p></blockquote>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/12/16/2020-kakao-blind-recruitment-string-compression/#disqus_thread</comments>
    </item>
    
    <item>
      <title>&#39;christmas-tree&#39; 레포에 아희 묻히기</title>
      <link>http://kinetic27.github.io/2020/12/12/christmas-tree/</link>
      <guid>http://kinetic27.github.io/2020/12/12/christmas-tree/</guid>
      <pubDate>Sat, 12 Dec 2020 13:16:36 GMT</pubDate>
      <description>
      
        &lt;p&gt;다양한 언어로 크리스마스 트리를 만들어보자&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>다양한 언어로 크리스마스 트리를 만들어보자</p><a id="more"></a><hr><h1 id="christmas-tree"><a href="#christmas-tree" class="headerlink" title="christmas-tree"></a>christmas-tree</h1><p>카톡에서 Resten 개발자님이 보내주신 재밌는 레포를 보게 되었습니다.</p><p>이전에 작성했던 글에서 소개한 <a href="https://kinetic.codes/2020/08/18/i-want-go-home/" rel="external nofollow noopener noreferrer" target="_blank">i-want-go-home</a>과 같은 다양한 언어로 출력문, 코드를 작성하는 레포입니다.</p><p><a href="https://github.com/Resten1497/christmas_tree" rel="external nofollow noopener noreferrer" target="_blank">레포 링크</a></p><p>Readme에 레포를 사용하는 방법이 잘 나와있습니다.</p><p><img src="1.png" alt="사용 방법 및 설명"></p><hr><h1 id="작성할-언어를-정해보자"><a href="#작성할-언어를-정해보자" class="headerlink" title="작성할 언어를 정해보자"></a>작성할 언어를 정해보자</h1><p>저는 우선 제가 좋아하는 언어인 <code>아희</code>를 사용하여 작성을 해보려고 했습니다.<br>하지만 이미 빠르게 아희로 PR을 넣으신 분이 계셨습니다.  </p><p><img src="2.png" alt="아희!"></p><p>하지만 가이드라인에서 알 수 있듯이 </p><blockquote><p>그리고, 이미 작성된 언어가 있어도, 자신만의 트리를 추가하는거니,<br>자신이 하고 싶은 언어명 으로 된 폴더에 다른 파일 명으로 자신의 크리스마스 트리를 추가할 수 있습니다.</p></blockquote><p>이미 언어가 작성되어있어도 자신만의 트리 파일을 추가 할 수 있다고 합니다.</p><p>저는 그래서 아희 언어를 사용하여 PR을 넣어보려 했습니다.</p><hr><h1 id="fork-고고"><a href="#fork-고고" class="headerlink" title="fork 고고"></a>fork 고고</h1><p>우선 가이드라인대로 <code>Fork</code>를 한 뒤 새로운 <code>branch</code>를 하나 만들어줬습니다.</p><p><img src="3.png" alt="브랜치 목록"></p><p>이제 코드를 작성한 후 해당 레포의 <code>aheui</code> 폴더에 아희 코드 파일을 추가한 후 PR을 넣으면 끝입니다.</p><hr><h1 id="아희-베이스-작성"><a href="#아희-베이스-작성" class="headerlink" title="아희 베이스 작성"></a>아희 베이스 작성</h1><p>이번에 해볼 것은 아희 코드로 크리스마스 트리 <a href="https://ko.wikipedia.org/wiki/%EC%95%84%EC%8A%A4%ED%82%A4_%EC%95%84%ED%8A%B8" rel="external nofollow noopener noreferrer" target="_blank">아스키 아트</a>를 출력하는 코드 만든 다음,<br>진짜 트리 모양으로 코드를 변형해보려고 합니다.</p><p>먼저 검색을 통해서 크리스마스 트리 모양 아스키 아트 텍스트를 찾아봤습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">         _</span><br><span class="line">      |\ 0 &#x2F;|</span><br><span class="line">       |&#x2F;|\|</span><br><span class="line">         |</span><br><span class="line">         @</span><br><span class="line">        &#x2F;+\</span><br><span class="line">     +&#x2F;&#x2F;o&#x2F;\\o</span><br><span class="line">     &#x2F;&#x2F;+&#x2F;@\\&#x2F;+o</span><br><span class="line">    &#x2F;\&#x2F;o&#x2F;&#x2F;+&#x2F;\\\\</span><br><span class="line">   +&#x2F;&#x2F;&#x2F;\&#x2F;&#x2F;\o\o+\\o</span><br><span class="line">  o&#x2F;+@&#x2F;++&#x2F;\\\@\\&#x2F;\+</span><br><span class="line"> &#x2F;\&#x2F;+&#x2F;&#x2F;&#x2F;o&#x2F;@\o+&#x2F;\+\\</span><br><span class="line">o&#x2F;+&#x2F;\&#x2F;@&#x2F;&#x2F;||\&#x2F;\\o\\\o _</span><br><span class="line"> &#x2F;__ &#x2F;|  ||      &#x2F;__ &#x2F;|</span><br><span class="line">| * | | (__)___ | * | |</span><br><span class="line">|___|&#x2F;_   &#x2F;__ &#x2F;||___|&#x2F;</span><br><span class="line">    &#x2F;_&#x2F;| | * | |</span><br><span class="line">   |_|&#x2F;  |___|&#x2F;</span><br></pre></td></tr></table></figure><p>이제 아희로 해당 아스키 아트를 출력하는 코드를 먼저 작성할 차례인데…<br>너무 깁니다.  </p><p>아희 언어의 특성상 <code>2~9의 숫자와 사칙연산 + 나머지연산</code>으로 뽑아낸 값에 해당하는 코드포인트의 유니코드 문자를 UTF-8로 출력하기 때문에 긴 출력문을 만드려면 상당한 노력이 필요합니다.  </p><p>하지만 이를 편하게하기 위해서 제가 만들어뒀던 툴이 있습니다.</p><p>플레이스토어에 배포해두었던 <a href="https://play.google.com/store/apps/details?id=kr.co.kinetic27.aheuiro&hl=ko" rel="external nofollow noopener noreferrer" target="_blank">AheuiRo</a> 앱 입니다. </p><p>저 아스키 텍스트를 <code>AheuiRo</code>앱에 돌려서 먼저 모양을 고려하지 않고 한 방향으로 작성된 아희 출력문을 얻어옵니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">반밙따밣밗따빠맣빠맣빠맣빠맣빠맣빠맣빠맣빠맣빠맣맣밢밟따밣다밦다맣박발따맣밣밭따빠맣빠맣빠맣빠맣빠맣빠맣맣밖밠따밪다밤따맣밢밡따밫다밠다맣밣밗따맣받밪타망밣밮따맣발밟따반다맣밮밠따밬다밭따맣박발따맣밣밮따빠맣빠맣빠맣빠맣빠맣빠맣빠맣맣밗밝따받다밨따맣밙밡따반다맣밤밝따밪다밭따맣밞밟따밤다밝다맣밮밝따받다밫따맣반밙따맣밣밥따빠맣빠맣빠맣빠맣빠맣빠맣빠맣빠맣빠맣맣밮밝따받다밭따맣박밙따맣밣밨따빠맣빠맣빠맣빠맣빠맣빠맣빠맣빠맣빠맣맣밣밣따맣반발따맣밣밭따빠맣빠맣빠맣빠맣빠맣빠맣빠맣빠맣맣밚밡따박다맣밚밣따밪다맣밡밢따밖다밠다맣반밚따맣밣밭따빠맣빠맣빠맣빠맣빠맣빠맣빠맣맣밪발따밠따밦다맣밙밞따박다맣밣밣따맣밞밞따밭다밝다빠맣맣박발따맣밣밮따빠맣빠맣빠맣빠맣빠맣맣밚밣따밪다맣밚밞따박다빠맣맣밪밚따밠따밦다맣밚밢따박다맣밟밡따밮다밝다빠맣맣밬발따밝따밦다맣반밚따맣밣밫따빠맣빠맣빠맣빠맣빠맣맣밚밞따박다빠맣맣발밣따밬다맣밚밡따반다맣밣밣따맣밟밟따밫다밝다빠맣맣발밟따박다맣발밣따받다맣받발따밝따밦다맣반밚따맣밣밫따빠맣빠맣빠맣빠맣맣밙밞따반다맣밟밞따밮다밠다맣밙밢따박다맣밪발따밝따밦다맣발밡따박다빠맣맣발밣따받다맣발밞따반다맣밞밡따밗다밝다빠맣빠맣빠맣맣반발따맣밣밮따빠맣빠맣빠맣맣밙밣따밬다맣밙밡따박다빠맣빠맣맣밞밟따밨다밝다맣밚밡따반다빠맣맣밟밟따밨다밝다맣밪밚따밠따밦다맣밢밞따밤다밠다맣밪밙따밝따밦다맣밚밣따밬다맣밞밢따밥다밝다빠맣맣밪밚따밝따밦다맣박밚따맣밣밭따빠맣빠맣맣받발따밠따밦다맣밚밞따박다맣밙밣따받다맣밣밣따맣밙밡따박다맣밙밣따밪다빠맣맣밙밢따반다맣밟밞따밗다밠다빠맣빠맣맣밣밣따맣밢밟따밨다밠다빠맣맣발밞따박다맣밡밟따밭다밝다맣발밣따밬다맣박발따맣밣밮따빠맣맣밙밞따박다맣밡밞따밮다밝다맣밙밡따반다맣밙밣따밬다맣발밢따박다빠맣빠맣맣받밙따밝따밦다맣발밟따박다맣밣밣따맣밢밞따밮다밝다맣받밙따밠따밦다맣밙밣따받다맣발밟따반다맣밟밟따밨다밝다맣밚밣따밪다맣밢밟따밨다밝다빠맣맣박밚따맣밣밫따맣밪밙따밠따밦다맣밚밞따반다맣발밣따밬다맣밚밟따박다맣밟밟따밗다밠다맣밚밟따반다맣밣밣따맣밚밢따반다빠맣맣밥밝따받다밭따빠맣맣밡밟따밫다밝다맣밙밟따반다맣밞밟따밭다밠다빠맣맣밬밙따밠따밦다맣밢밟따밥다밠다빠맣빠맣맣밪발따밝따밦다맣밣밤따맣밞밟따밣다밦다맣박밙따맣밣밭따빠맣맣발밡따반다맣밡밡따밣다밦다빠맣맣밣밗따맣밚밢따반다맣밗밝따밪다밖따맣밣밥따빠맣맣밭밝따밪다밖따빠맣맣밣밗따빠맣빠맣빠맣빠맣빠맣맣밙밟따반다맣밟밞따밣다밦다빠맣맣밣밗따맣밚밟따박다맣밥밝따밬다밮따맣박밙따맣밣밭따맣밖밠따받다밮따맣밣밭따맣밦밠따맣밣밗따맣밖밝따밪다밥따맣밣밥따맣밮밠따받다밗따맣밣밗따맣밣밚따맣밡밞따밣다밦다빠맣맣발밝따밦다맣밢밟따밣다밦다빠맣빠맣맣밣밨따맣밤밝따밪다밭따맣밣밫따맣밦밝따맣밣밥따맣밮밠따밬다밗따맣밣밮따맣밮밝따밪다밭따맣박밚따맣밣밫따맣밗밝따밬다밨따맣밞밟따밣다밦다빠맣빠맣맣밗밝따밪다밥따맣밙밢따박다맣밟밟따밣다밦다맣밣밨따빠맣빠맣맣발밞따박다맣밡밢따밣다밦다빠맣맣밣밫따맣밙밡따박다맣밫밠따밬다밨따빠맣맣밞밟따밣다밦다빠맣빠맣맣밨밝따밬다밤따맣밙밞따반다맣반발따맣밣밤따빠맣빠맣빠맣빠맣맣밚밢따박다맣밟밟따밣다밦다맣발밟따반다맣밫밝따밬다밨따맣밣밭따맣밖밠따밪다밭따맣밣밭따맣밦밠따맣밣밭따맣밥밝따밬다밗따맣밣밨따맣밭밝따밪다밖따맣박밙따맣밣밥따빠맣빠맣빠맣맣밖밝따밪다밥따맣밞밞따밣다밦다맣밗밠따밬다밫따맣밚밢따반다맣밣밤따빠맣맣밫밠따밪다밫따맣밢밞따밣다밦다빠맣빠맣맣밭밝따밪다밥따맣밚밟따반다맣마희</span><br></pre></td></tr></table></figure><p>마지막에서 두번째의 <code>마</code>는 스택을 비우기위한 코드인데 필요없으니 버립시다.<br>(아직 앱 업데이트를 못했습니다 ㅈㅅ…)</p><p>그 다음 크리스마스 트리 모양을 만들 차례인데 디자인 센스가 없어서</p><p>그냥 좀 길다란 삼각형 아래에 사각형을 달아보려고합니다.</p><p>먼저 메모장을 이용해서 엔터를 넣어주는 작업을 했습니다.</p><hr><h1 id="코드-변형"><a href="#코드-변형" class="headerlink" title="코드 변형"></a>코드 변형</h1><p><img src="4.png" alt="메모장 갓툴"></p><p>먼저 이런식으로 삼각형을 생각하면서 엔터를 넣어줍니다.</p><p>그 다음 띄어쓰기를 밑에부터 1개씩 늘려주며 넣으면 되는데<br>엔터를 넣을때와 마찬가지로 너무 넙적해지지 않게 두줄씩 같은 개수의 띄어쓰기를 넣어주었습니다.</p><p>밑에 남겨둔 줄은 트리의 밑동인 사각형을 만들기 위한 줄 입니다.</p><p><img src="5.png" alt="띄어쓰기 넣어주기"></p><p>이번엔 코드양이 좀 길고 변형을 많이 해야하니 <a href="https://aheui.github.io/avis/" rel="external nofollow noopener noreferrer" target="_blank">Avis</a>라는 툴을 사용해보겠습니다.</p><p>유명한 아희 인터프리터 3종중에 편의 기능을 제일 많이 지원하는 툴 입니다.</p><p>그 다음 코드 시작을 위해서 <code>아</code>를 첫칸에 삽입해줍니다.</p><p><img src="6.png" alt="아아아아아"></p><p><code>Avis</code>에는 종성이 <code>ㅏㅏㅏㅏㅏㅏ</code> 로 된 코드를 <code>ㅓㅓㅓㅓㅓㅓ</code> 로 바꿔주는 식의 좌우반전, 다시 그리기 등의 기능이 있는데요.  </p><p>이 기능을 활용하여 적당히 수정해준 후, 띄어쓰기를 모두</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　</span><br></pre></td></tr></table></figure><p>로 바꿔서 간격을 일정하게 만들어줍니다.<br>그럼 완성됩니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">아　　　　　　　　　　　　　　　　　　　　　　　　　분　　　　　　　　　　　　　　　　　　　　　　　　　　희</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　　　　　땨벉붏</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　　　　　뿌떠벇</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　　　　뺘멓맣빠뭏</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　　　　뿌멓뻐멓뻐</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　　　뺘멓맣빠맣빠뭏</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　　　붒더벓떠벏벒멓</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　　먛더박발따맣밣밭뚜</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　　뿌멓뻐멓뻐멓뻐멓뻐</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　뺘멓맣맣밖밠따밪다밤뚜</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　붃벓멓더벐더벛떠벑벒멓</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　먛떠받밪타망밣밮따맣발밟뚜</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　불벅멓떠벝더벜떠벐벞멓더번</span><br><span class="line">　　　　　　　　　　　　　　　　　　　먛떠밣밮따빠맣빠맣빠맣빠맣빠뭏</span><br><span class="line">　　　　　　　　　　　　　　　　　　　붍벉멓떠벘더벋떠벍벇멓멓뻐멓뻐</span><br><span class="line">　　　　　　　　　　　　　　　　　　뱐떠다맣밤밝따밪다밭따맣밞밟따밤두</span><br><span class="line">　　　　　　　　　　　　　　　　　　붑벓멓떠벉번멓떠벛더벋떠벍벞멓더벍</span><br><span class="line">　　　　　　　　　　　　　　　　　뺘떠맣빠맣빠맣빠맣빠맣빠맣빠맣빠맣빠뭏</span><br><span class="line">　　　　　　　　　　　　　　　　　뿌멓뻐떠벘벓멓떠벉벅멓떠벝더벋떠벍벞멓</span><br><span class="line">　　　　　　　　　　　　　　　　뺘멓맣빠맣빠맣빠맣빠맣빠맣빠맣맣밣밣따맣분</span><br><span class="line">　　　　　　　　　　　　　　　　뿌멓뻐멓뻐멓뻐멓뻐멓뻐멓뻐멓뻐떠벝벓멓떠벌</span><br><span class="line">　　　　　　　　　　　　　　　먛멓밚밡따박다맣밚밣따밪다맣밡밢따밖다밠다맣분</span><br><span class="line">　　　　　　　　　　　　　　　불벚멓멓뻐멓뻐멓뻐멓뻐멓뻐멓뻐멓뻐떠벝벓멓떠벊</span><br><span class="line">　　　　　　　　　　　　　　뱘떠따밦다맣밙밞따박다맣밣밣따맣밞밞따밭다밝다빠뭏</span><br><span class="line">　　　　　　　　　　　　　　뭏더벚떠벓벊멓멓뻐멓뻐멓뻐멓뻐멓뻐떠벞벓멓떠벌벅멓</span><br><span class="line">　　　　　　　　　　　　　뱖벊따박다빠맣맣밪밚따밠따밦다맣밚밢따박다맣밟밡따밮두</span><br><span class="line">　　　　　　　　　　　　　뿌멓뻐멓뻐멓뻐떠벛벓멓떠벊번멓더벖떠벍떠벌벜멓멓뻐더벍</span><br><span class="line">　　　　　　　　　　　　뺘멓맣맣밚밞따박다빠맣맣발밣따밬다맣밚밡따반다맣밣밣따맣붋</span><br><span class="line">　　　　　　　　　　　　뭏더벖떠벍떠벌벋멓더벋떠벓벌멓더벅떠벏벌멓멓뻐더벍더벛떠벏</span><br><span class="line">　　　　　　　　　　　뱒번따맣밣밫따빠맣빠맣빠맣빠맣맣밙밞따반다맣밟밞따밮다밠다맣붅</span><br><span class="line">　　　　　　　　　　　분떠벎벌멓더벋떠벓벌멓멓뻐더벅떠벑벌멓더벖떠벍떠벌벚멓더벅떠벒</span><br><span class="line">　　　　　　　　　　먛더밞밡따밗다밝다빠맣빠맣빠맣맣반발따맣밣밮따빠맣빠맣빠맣맣밙밣뚜</span><br><span class="line">　　　　　　　　　　붔떠벏벏멓멓뻐더번떠벑벊멓더벍더벘떠벏벎멓멓뻐멓뻐더벅떠벑벉멓더벜</span><br><span class="line">　　　　　　　　　뱕더다맣밪밚따밠따밦다맣밢밞따밤다밠다맣밪밙따밝따밦다맣밚밣따밬다맣붊</span><br><span class="line">　　　　　　　　　붒떠벐떠벌벋멓멓뻐멓뻐떠벝벓멓떠벊벅멓더벖떠벍떠벊벚멓멓뻐더벍더법떠벒</span><br><span class="line">　　　　　　　　먛더밚밞따박다맣밙밣따받다맣밣밣따맣밙밡따박다맣밙밣따밪다빠맣맣밙밢따반두</span><br><span class="line">　　　　　　　　붙떠벏벑멓더벅떠벎벌멓멓뻐더벐더벘떠벏벒멓떠벓벓멓멓뻐멓뻐더벐더벇떠벎벏멓</span><br><span class="line">　　　　　　　뱕더다맣발밣따밬다맣박발따맣밣밮따빠맣맣밙밞따박다맣밡밞따밮다밝다맣밙밡따반두</span><br><span class="line">　　　　　　　붚떠벎벒멓떠벓벓멓더벅떠벏벌멓더벖떠벍떠벉벋멓멓뻐멓뻐더벅떠벒벌멓더벜떠벓벉멓</span><br><span class="line">　　　　　　뱕더다맣받밙따밠따밦다맣밙밣따받다맣발밟따반다맣밟밟따밨다밝다맣밚밣따밪다맣밢밟뚜</span><br><span class="line">　　　　　　뭏더벅떠벏벊멓더벜떠벓벌멓더번떠벎벊멓더벖떠벐떠벉벚멓떠벛벓멓떠벊벅멓멓뻐더벍더벘</span><br><span class="line">　　　　　뱗벏따밗다밠다맣밚밟따반다맣밣밣따맣밚밢따반다빠맣맣밥밝따받다밭따빠맣맣밡밟따밫다밝두</span><br><span class="line">　　　　　붒떠벍떠벌벚멓멓뻐멓뻐더벐더법떠벏벒멓더벖떠벐떠벉벜멓멓뻐더벐더벝떠벏벎멓더번떠벏벉멓</span><br><span class="line">　　　　먛더밣밤따맣밞밟따밣다밦다맣박밙따맣밣밭따빠맣맣발밡따반다맣밡밡따밣다밦다빠맣맣밣밗따맣붆</span><br><span class="line">　　　　붋벉멓멓뻐멓뻐멓뻐멓뻐멓뻐떠벇벓멓멓뻐떠벆더벚떠벍벝멓멓뻐떠법벓멓떠벆더벚떠벍벇멓더번떠벒</span><br><span class="line">　　　뱐떠다맣밟밞따밣다밦다빠맣맣밣밗따맣밚밟따박다맣밥밝따밬다밮따맣박밙따맣밣밭따맣밖밠따받다밮뚜</span><br><span class="line">　　　붒더벓떠벎벑멓떠벊벓멓떠벇벓멓떠벇더벋떠벐벞멓떠법벓멓떠법더벚떠벍벆멓떠벇벓멓떠벐벖멓떠벝벓멓</span><br><span class="line">　　뺘더맣맣발밝따밦다맣밢밟따밣다밦다빠맣빠맣맣밣밨따맣밤밝따밪다밭따맣밣밫따맣밦밝따맣밣밥따맣밮밠뚜</span><br><span class="line">　　붖떠벍벇멓멓뻐멓뻐더벖더벓떠벏벎멓떠벘더벜떠벍벇멓떠벛벓멓떠벊벅멓떠벝더벚떠벍벞멓떠벞벓멓떠벇더벜</span><br><span class="line">　뱝더따맣밙밢따박다맣밟밟따밣다밦다맣밣밨따빠맣빠맣맣발밞따박다맣밡밢따밣다밦다빠맣맣밣밫따맣밙밡따박두</span><br><span class="line">　뿌멓뻐멓뻐멓뻐떠범벓멓떠벌번멓더번떠벎벉멓떠범더벜떠벍벘멓멓뻐멓뻐더벖더벓떠벏벎멓멓뻐떠벘더벜떠벐벛멓</span><br><span class="line">먛멓밚밢따박다맣밟밟따밣다밦다맣발밟따뱐뚜댜볕먛볋뱣몋뱕뗘땨볈뱤볎댜몋뱠뗘땨볕먛볋뱛몋뱥뗘땨볕먛뎌뱎볒밠뗘</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　맣밥밝따밬다밗따맣밣밨따뭏</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　붏멓떠벉벅멓떠벆더벚떠벍벝</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　밥따빠맣빠맣빠맣맣밖밝따붖</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　붃멓더벖더벓떠벎벎멓떠법더</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　밠따밬다밫따맣밚밢따반다뭏</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　뚜벛더벚떠벐벛멓멓뻐떠범벓</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　맣밢밞따밣다밦다빠맣빠맣뭏</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　두번떠벏벊멓떠법더벚떠벍벝</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　맣희키네틱제작크리스마스🎄</span><br></pre></td></tr></table></figure><p>ㄹ자로 휘어지게 작성해보았습니다.</p><hr><h1 id="소감"><a href="#소감" class="headerlink" title="소감"></a>소감</h1><p>저번 <code>PR</code>보다는 나아졌으나…. 이번엔 코드를 한글자 잘못 작성한걸 발견하여 뒤늦게 재PR을 넣었습니다.</p><p>복잡한 코드 변형은 <code>Avis</code>가 더 좋은것 같고, 실행 경로 확인은 <code>AheuiChem</code>가 더 유리한 것 같습니다.</p><p>다들 크리스마스 전에 자기가 좋아하는 언어로 PR을 해보면 좋을 것 같습니다!</p><ul><li>틈틈히 쉬운 아희 강좌글 작성을 하고 있습니다 크리스마스 전에 완성되면 좋겠네요</li></ul><hr><p>글에 사용을 허락해주신 Resten님 감사합니다 🙌</p>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/12/12/christmas-tree/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Level 1, 카카오 인턴] 프로그래머스 키패드 누르기 코틀린 풀이</title>
      <link>http://kinetic27.github.io/2020/10/25/kakao-intern-press-keypad/</link>
      <guid>http://kinetic27.github.io/2020/10/25/kakao-intern-press-keypad/</guid>
      <pubDate>Sun, 25 Oct 2020 11:08:08 GMT</pubDate>
      <description>
      
        &lt;p&gt;[Level 1] 프로그래머스 [카카오 인턴] 키패드 누르기 코틀린 풀이&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>[Level 1] 프로그래머스 [카카오 인턴] 키패드 누르기 코틀린 풀이</p><a id="more"></a><hr><h1 id="문제-소개"><a href="#문제-소개" class="headerlink" title="문제 소개"></a>문제 소개</h1><p>이번에 풀어볼 <a href="https://programmers.co.kr/learn/courses/30/lessons/67256" rel="external nofollow noopener noreferrer" target="_blank">문제</a>는 [카카오 인턴] 키패드 누르기입니다.</p><p><img src="1.png" alt="키패드"><br><img src="2.png" alt="문제1"><br><img src="3.png" alt="문제2"></p><p>키패드를 두손으로 누를때 좌우 어떤 손으로 눌러야 효율적일지 설명에 따라서 코드를 짜면 됩니다.</p><hr><h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><blockquote><p>왼쪽 열의 3개의 숫자 1, 4, 7을 입력할 때는 왼손 엄지손가락을 사용합니다.<br>오른쪽 열의 3개의 숫자 3, 6, 9를 입력할 때는 오른손 엄지손가락을 사용합니다.  </p></blockquote><p>이것은 단순히 if-else를 이용하여 처리하면 되는 간단한 문제지만</p><blockquote><p>가운데 열의 4개의 숫자 2, 5, 8, 0을 입력할 때는 두 엄지손가락의 현재 키패드의 위치에서 더 가까운 엄지손가락을 사용합니다.  </p><p>만약 두 엄지손가락의 거리가 같다면, 오른손잡이는 오른손 엄지손가락, 왼손잡이는 왼손 엄지손가락을 사용합니다.  </p></blockquote><p>부분이 문제의 핵심이었습니다.<br>제가 생각한 구현 방법은 이러합니다.</p><hr><h2 id="거리를-통한-접근"><a href="#거리를-통한-접근" class="headerlink" title="거리를 통한 접근"></a>거리를 통한 접근</h2><p><img src="p1.png" alt="키패드"></p><p>먼저 키패드의 숫자들을 좌표 평면상으로 올려버립니다.  </p><p>그럼 <code>*</code>은 <code>(1, 1)</code>로 <code>3</code>은 <code>(3, 4)</code>가 되는데 이렇게 좌표평면에 올려버리면 거리를 구할 수 있습니다.</p><p>예로 <code>4(1, 3)</code>와 <code>9(3, 2)</code>의 거리는</p><p>\[\sqrt{(X1 - X2)^2 + (Y1 - Y2)^2}\]</p><p>거리를 구하는 식에 대입하여</p><p>\[\sqrt{(1 - 3)^2 + (1 - 4)^2} = \sqrt{13}\]</p><p>로 구할 수 있습니다.  </p><p>이를 이용하여 <code>왼손 - 목표 키</code>, <code>오른손 - 목표키</code>를 구하는것이 제 목표인데,  </p><blockquote><p>엄지손가락은 상하좌우 4가지 방향으로만 이동할 수 있으며 키패드 이동 한 칸은 거리로 1에 해당합니다.</p></blockquote><p>라는 조건이있으니 단순히 유클리드 거리로 구할 수는 없습니다.<br>하지만 이 거리의 경우의 수는 생각보다 적습니다.</p><p>거리가 <code>가로(0 ~ 2)</code>, <code>세로(0 ~ 3)</code>이기 때문에 이 수들의 제곱의 합을 조합해보면 됩니다.</p><p>\[0, 1, \sqrt{2}, 2, \sqrt{5}, 2\sqrt{2}, 3, 10, \sqrt{13}\]</p><p>그래서 저는 우선 이 거리들을 상하좌우로 움직였을 때의 거리로 반환해주는 함수를 하나 작성했습니다.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="built_in">Int</span>.<span class="title">toKeypadDistance</span><span class="params">()</span></span>: <span class="built_in">Int</span> = <span class="keyword">when</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">    <span class="number">0</span> -&gt; <span class="number">0</span></span><br><span class="line">    <span class="number">1</span> -&gt; <span class="number">1</span></span><br><span class="line">    <span class="number">2</span> -&gt; <span class="number">2</span></span><br><span class="line">    <span class="number">4</span> -&gt; <span class="number">2</span></span><br><span class="line">    <span class="number">5</span> -&gt; <span class="number">3</span></span><br><span class="line">    <span class="number">8</span> -&gt; <span class="number">4</span></span><br><span class="line">    <span class="number">9</span> -&gt; <span class="number">3</span></span><br><span class="line">    <span class="number">10</span> -&gt; <span class="number">4</span></span><br><span class="line">    <span class="keyword">else</span> -&gt; <span class="number">5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>그 다음 우선 이 함수를 이용하려면 <code>키패드의 문자</code>를 좌표로 반환하는 함수가 필요합니다.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> String.<span class="title">getLoc</span><span class="params">()</span></span>: Pair&lt;<span class="built_in">Int</span>, <span class="built_in">Int</span>&gt; &#123;</span><br><span class="line">    <span class="comment">/*     ^</span></span><br><span class="line"><span class="comment">     *   4 | 1 2 3</span></span><br><span class="line"><span class="comment">     *   3 | 4 5 6</span></span><br><span class="line"><span class="comment">     *   2 | 7 8 9</span></span><br><span class="line"><span class="comment">     *   1 | * 0 #</span></span><br><span class="line"><span class="comment">     *   ㅡ|ㅡㅡㅡㅡㅡ&gt;</span></span><br><span class="line"><span class="comment">     *     | 1 2 3</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> keyNum = <span class="string">"*0#789456123"</span>.indexOf(<span class="keyword">this</span>) + <span class="number">3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Pair(keyNum % <span class="number">3</span> + <span class="number">1</span>, keyNum / <span class="number">3</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>그래서 <code>*0#789456123</code>에서 입력받은 문자의 순번을 찾아 3으로 나눈 나머지로 x를, 3으로 나눈 몫을 y로 반환하는 함수를 작성했습니다.</p><p>이제<br>\[\sqrt{(X1 - X2)^2 + (Y1 - Y2)^2}\]<br>식을 코드로 작성해줍시다</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getDistance</span><span class="params">(one: <span class="type">Pair</span>&lt;<span class="type">Int</span>, <span class="built_in">Int</span>&gt;, two: <span class="type">Pair</span>&lt;<span class="type">Int</span>, <span class="built_in">Int</span>&gt;)</span></span>: <span class="built_in">Int</span> =</span><br><span class="line">    ((one.first - two.first + <span class="number">0.0</span>).pow(<span class="number">2.0</span>) + (one.second - two.second + <span class="number">0.0</span>).pow(<span class="number">2.0</span>)).toInt()</span><br></pre></td></tr></table></figure><p>복잡해보이지만 <code>Pair&lt;Int, Int&gt;</code> 두개를 받아서 제곱하는게 전부입니다.<br>저는 비교가 목적이니 루트는 생략하였습니다.</p><p>이제 필요한 함수들은 모두 작성이 끝났으니 메인 루프를 작성합니다.</p><p>눌러야할 숫자들이 담긴 배열을 가지고 <code>for</code>을 돌아줍니다.</p><p>돌면서 아까 만든 함수로 거리를 구해줍니다</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> leftDX = getDistance(left.getLoc(), it.toString().getLoc()).toKeypadDistance()</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> rightDX = getDistance(right.getLoc(), it.toString().getLoc()).toKeypadDistance()</span><br></pre></td></tr></table></figure><p>이제 답은 왼손과 오른손으로 구분됩니다.</p><p>입력이 <code>2580369</code>에 속해있으면 좌측, <code>2580(중앙)</code>인데 양손 거리가 같으면 왼손잡이일때 좌측  </p><p>이 두가지를 제외하고는 전부 우측으로 보내면 됩니다.</p><p>조건문을 몰아넣어 조금 길어져서 변수로 빼내었습니다.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">answer += <span class="keyword">when</span> &#123;</span><br><span class="line">            isInLeftSide || (isInMiddleSide &amp;&amp; isLeftCloser) -&gt; &#123;</span><br><span class="line">                    left = it.toString()</span><br><span class="line">                    <span class="string">"L"</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> -&gt; &#123;</span><br><span class="line">                    right = it.toString()</span><br><span class="line">                    <span class="string">"R"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>합치면 완성.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(numbers: <span class="type">IntArray</span>, hand: <span class="type">String</span>)</span></span>: String &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> answer = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> left = <span class="string">"*"</span></span><br><span class="line">    <span class="keyword">var</span> right = <span class="string">"#"</span></span><br><span class="line"></span><br><span class="line">    numbers.forEach &#123;</span><br><span class="line">        <span class="keyword">val</span> leftDX = getDistance(left.getLoc(), it.toString().getLoc()).toKeypadDistance()</span><br><span class="line">        <span class="keyword">val</span> rightDX = getDistance(right.getLoc(), it.toString().getLoc()).toKeypadDistance()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> isInLeftSide = !<span class="string">"2580369"</span>.contains(it.toString())</span><br><span class="line">        <span class="keyword">val</span> isInMiddleSide = <span class="string">"2580"</span>.contains(it.toString())</span><br><span class="line">        <span class="keyword">val</span> isLeftCloser = leftDX &lt; rightDX || (leftDX == rightDX &amp;&amp; hand == <span class="string">"left"</span>)</span><br><span class="line"></span><br><span class="line">        answer += <span class="keyword">when</span> &#123;</span><br><span class="line">            isInLeftSide || (isInMiddleSide &amp;&amp; isLeftCloser) -&gt; &#123;</span><br><span class="line">                    left = it.toString()</span><br><span class="line">                    <span class="string">"L"</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> -&gt; &#123;</span><br><span class="line">                    right = it.toString()</span><br><span class="line">                    <span class="string">"R"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> answer</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>바로 정답 문자열에 추가까지 하는 코드입니다.</p><p>이것으로도 정답이 나오기는 합니다… 만<br>답을 맞추고나니 방법이 생각났습니다.</p><hr><h2 id="좌표값으로-거리-가져오기"><a href="#좌표값으로-거리-가져오기" class="headerlink" title="좌표값으로 거리 가져오기"></a>좌표값으로 거리 가져오기</h2><p>그냥 문자를 좌표 평면으로 바꾼 뒤<br>\[|(X1 - X2)| + |(Y1 - Y2)|\]<br>를 거치면 바로 조건에서 말한 거리가 나옵니다….</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> leftDX = getDistance(left.getLoc(), it.toString().getLoc()).toKeypadDistance()</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> rightDX = getDistance(right.getLoc(), it.toString().getLoc()).toKeypadDistance()</span><br></pre></td></tr></table></figure><p>코드를 수정하고 다시 제출해도 정답이 나왔습니다.</p><h1 id="정답-코드"><a href="#정답-코드" class="headerlink" title="정답 코드"></a>정답 코드</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> kotlin.math.abs</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(numbers: <span class="type">IntArray</span>, hand: <span class="type">String</span>)</span></span>: String &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> answer = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> left = <span class="string">"*"</span></span><br><span class="line">        <span class="keyword">var</span> right = <span class="string">"#"</span></span><br><span class="line"></span><br><span class="line">        numbers.forEach &#123;</span><br><span class="line">            <span class="keyword">val</span> leftDX = left.getLoc().getKeypadDistance(it.toString().getLoc())</span><br><span class="line">            <span class="keyword">val</span> rightDX = right.getLoc().getKeypadDistance(it.toString().getLoc())</span><br><span class="line"></span><br><span class="line">            <span class="comment">// println("$leftDX, $rightDX")</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> isInLeftSide = !<span class="string">"2580369"</span>.contains(it.toString())</span><br><span class="line">            <span class="keyword">val</span> isInMiddleSide = <span class="string">"2580"</span>.contains(it.toString())</span><br><span class="line">            <span class="keyword">val</span> isLeftCloser = leftDX &lt; rightDX || (leftDX == rightDX &amp;&amp; hand == <span class="string">"left"</span>)</span><br><span class="line"></span><br><span class="line">            answer += <span class="keyword">when</span> &#123;</span><br><span class="line">                isInLeftSide || (isInMiddleSide &amp;&amp; isLeftCloser) -&gt; &#123;</span><br><span class="line">                    left = it.toString()</span><br><span class="line">                    <span class="string">"L"</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> -&gt; &#123;</span><br><span class="line">                    right = it.toString()</span><br><span class="line">                    <span class="string">"R"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> answer</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> String.<span class="title">getLoc</span><span class="params">()</span></span>: Pair&lt;<span class="built_in">Int</span>, <span class="built_in">Int</span>&gt; &#123;</span><br><span class="line">        <span class="comment">/*     ^</span></span><br><span class="line"><span class="comment">         *   4 | 1 2 3</span></span><br><span class="line"><span class="comment">         *   3 | 4 5 6</span></span><br><span class="line"><span class="comment">         *   2 | 7 8 9</span></span><br><span class="line"><span class="comment">         *   1 | * 0 #</span></span><br><span class="line"><span class="comment">         *   ㅡ|ㅡㅡㅡㅡㅡ&gt;</span></span><br><span class="line"><span class="comment">         *     | 1 2 3</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> keyNum = <span class="string">"*0#789456123"</span>.indexOf(<span class="keyword">this</span>) + <span class="number">3</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Pair(keyNum % <span class="number">3</span> + <span class="number">1</span>, keyNum / <span class="number">3</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> Pair<span class="type">&lt;Int, Int&gt;</span>.<span class="title">getKeypadDistance</span><span class="params">(p: <span class="type">Pair</span>&lt;<span class="type">Int</span>, <span class="built_in">Int</span>&gt;)</span></span>: <span class="built_in">Int</span> =</span><br><span class="line">        abs(<span class="keyword">this</span>.first - p.first) + abs(<span class="keyword">this</span>.second - p.second)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>출처: 프로그래머스 코딩 테스트 연습, <a href="https://programmers.co.kr/learn/challenges" rel="external nofollow noopener noreferrer" target="_blank">https://programmers.co.kr/learn/challenges</a></p></blockquote>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/10/25/kakao-intern-press-keypad/#disqus_thread</comments>
    </item>
    
    <item>
      <title>샌즈와 함께 골 때리게 개발을 해보자 - 20chan/SansTyping</title>
      <link>http://kinetic27.github.io/2020/09/17/sans-typing/</link>
      <guid>http://kinetic27.github.io/2020/09/17/sans-typing/</guid>
      <pubDate>Thu, 17 Sep 2020 11:42:02 GMT</pubDate>
      <description>
      
        &lt;p&gt;겁 나 어 렵 습 니 다&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>겁 나 어 렵 습 니 다</p><a id="more"></a><hr><p><img src="sans.gif" alt="와! 샌즈! 아시는구나!"></p><h1 id="오늘의-레포"><a href="#오늘의-레포" class="headerlink" title="오늘의 레포"></a>오늘의 레포</h1><p>오늘 소개해드릴 레포는 <a href="https://github.com/20chan/SansTyping" rel="external nofollow noopener noreferrer" target="_blank">SansTyping</a>입니다!</p><p><code>C#</code>으로 제작된 이 프로젝트는 <code>토비 폭스</code>가 제작한 롤플레잉 비디오 게임인 <code>언더테일</code>의 캐릭터 <code>샌즈</code>가 타이핑을 할 때마 <code>샌즈</code> 목소리로 말을 해주는 <code>20chan</code>님의 <a href="https://github.com/20chan/SansTyping" rel="external nofollow noopener noreferrer" target="_blank">레포</a>입니다!</p><p>재밌는 아이디어로 제작된 이 프로그램을 저는 혼자 개발할 때 powermode 플러그인과 함께 사용하고 있습니다</p><iframe width="560" height="315" src="https://www.youtube.com/embed/uAFA9AusfEQ" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><hr><h1 id="설치해보자"><a href="#설치해보자" class="headerlink" title="설치해보자"></a>설치해보자</h1><p>먼저 깃허브의 <a href="https://github.com/20chan/SansTyping/releases/tag/1.1" rel="external nofollow noopener noreferrer" target="_blank">릴리즈 탭</a>으로 들어갑니다</p><p>그 다음 <code>SansTyping_v1.1.zip</code>(현 시점 최신버전) 압축파일을 받아줍니다.</p><p><img src="2.png" alt="최신버전으로 받으시면 됩니다"></p><p>파일 구조는 이러합니다</p><p><img src="3.png" alt="파일 구조"></p><p>압축을 풀고 <code>SansTyping.exe</code> 파일을 실행합니다.</p><hr><p>샌즈와 함께 골 때리는 개발을 즐겨보세요 :)</p>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/09/17/sans-typing/#disqus_thread</comments>
    </item>
    
    <item>
      <title>킹받는 BOJ 익스텐션 커스텀하기 + 적용법</title>
      <link>http://kinetic27.github.io/2020/09/16/hell-boj-verdict-message/</link>
      <guid>http://kinetic27.github.io/2020/09/16/hell-boj-verdict-message/</guid>
      <pubDate>Wed, 16 Sep 2020 11:38:14 GMT</pubDate>
      <description>
      
        &lt;p&gt;BOJ 출력메시지! 팩트폭력(?)하게 바꿔보자!&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>BOJ 출력메시지! 팩트폭력(?)하게 바꿔보자!</p><a id="more"></a><hr><h1 id="오늘의-레포"><a href="#오늘의-레포" class="headerlink" title="오늘의 레포"></a>오늘의 레포</h1><p>오늘 소개해드릴 레포는 <a href="https://github.com/Kinetic27/Hell-BOJ-Verdict-Message-with-kk/blob/master/README.md" rel="external nofollow noopener noreferrer" target="_blank">Hell-BOJ-Verdict-Message-with-kk</a>입니다!</p><p>이 레포는 <a href="https://justicehui.github.io/" rel="external nofollow noopener noreferrer" target="_blank">나정휘</a>님이 만드신 <a href="https://github.com/justiceHui/Hell-BOJ-Verdict-Message" rel="external nofollow noopener noreferrer" target="_blank">Hell-BOJ-Verdict-Message</a> 레포를 fork한 뒤에 <a href="https://gist.github.com/kiwiyou/ffb8beab11cbc64cb696639fd0c984c7" rel="external nofollow noopener noreferrer" target="_blank">kiwiyou님이 짜신 스크립트</a>에서 아이디어를 얻어서 제가 이 두가지를 합쳐놓은 레포입니다.</p><hr><h2 id="Hell-BOJ-Verdict-Message"><a href="#Hell-BOJ-Verdict-Message" class="headerlink" title="Hell-BOJ-Verdict-Message"></a>Hell-BOJ-Verdict-Message</h2><p>나정휘님이 만드신 <a href="https://github.com/justiceHui/Hell-BOJ-Verdict-Message" rel="external nofollow noopener noreferrer" target="_blank">크롬 브라우저 확장</a>은 아래 사진과 같이 <a href="https://www.acmicpc.net/" rel="external nofollow noopener noreferrer" target="_blank">BOJ</a>의 채점 결과를 바꾸어줍니다.</p><p><img src="1.jpg" alt="사진 출처 나정휘님의 레포"></p><hr><h2 id="Kiwiyou님의-ㅋ-스크립트"><a href="#Kiwiyou님의-ㅋ-스크립트" class="headerlink" title="Kiwiyou님의 ㅋ 스크립트"></a>Kiwiyou님의 ㅋ 스크립트</h2><p>그리고 <a href="https://github.com/kiwiyou/" rel="external nofollow noopener noreferrer" target="_blank">Kiwiyou</a>님이 짜신 ㅋ 스크립트는 아래와 같은데요</p><script src="https://gist.github.com/kiwiyou/ffb8beab11cbc64cb696639fd0c984c7.js"></script><p>채점 결과 항목을 <code>status-table</code>라는 <code>ID</code>를 가진 표를 가져와서 <code>for</code> 반복문으로 접근하면서 정답이 아닌 경우에만 <code>ㅋ</code>을  달도록 하셨습니다.</p><p>저는 이 두가지를 합쳐보려고합니다.</p><hr><h2 id="ㅋ-스크립트를-HBVM에-적용해보자"><a href="#ㅋ-스크립트를-HBVM에-적용해보자" class="headerlink" title="ㅋ 스크립트를 HBVM에 적용해보자"></a>ㅋ 스크립트를 HBVM에 적용해보자</h2><p>나정휘님의 코드는</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"result"</span>);</span><br><span class="line"><span class="keyword">const</span> RED = <span class="string">"&lt;span class=\"result-wa \"&gt;"</span>;</span><br><span class="line"><span class="keyword">const</span> BLUE = <span class="string">"&lt;span class=\"result-ce \"&gt;"</span>;</span><br><span class="line"><span class="keyword">const</span> GREEN = <span class="string">"&lt;span class=\"result-ac \"&gt;"</span>;</span><br><span class="line"><span class="keyword">const</span> END = <span class="string">"&lt;/span&gt;"</span>;</span><br><span class="line"><span class="keyword">const</span> conv = &#123;</span><br><span class="line">    <span class="string">"맞았습니다!!"</span>: <span class="string">"맞았다!!"</span>,</span><br><span class="line">    <span class="string">"틀렸습니다"</span>: <span class="string">`데이터<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;BLUE&#125;</span>는 <span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;GREEN&#125;</span>맞았습니다.<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;BLUE&#125;</span> 니는 <span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;RED&#125;</span>틀렸습니다.`</span>,</span><br><span class="line">    <span class="string">"런타임 에러"</span>: <span class="string">"사용자 불량"</span>,</span><br><span class="line">    <span class="string">"시간 초과"</span>: <span class="string">`<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;RED&#125;</span>시간은 금이다.`</span>,</span><br><span class="line">    <span class="string">"컴파일 에러"</span>: <span class="string">`컴파일러<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;BLUE&#125;</span>는 <span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;GREEN&#125;</span>맞았습니다.<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;BLUE&#125;</span> 니는 <span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;RED&#125;</span>틀렸습니다.`</span>,</span><br><span class="line">    <span class="string">"메모리 초과"</span>: <span class="string">`<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;RED&#125;</span>다다익램`</span>,</span><br><span class="line">    <span class="string">"출력 초과"</span>: <span class="string">"꼬리가 길면 잡힌다."</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">    <span class="keyword">let</span> now = arr[i].innerHTML;</span><br><span class="line">    <span class="keyword">let</span> str = arr[i].innerText;</span><br><span class="line">    <span class="keyword">if</span>(conv[str] == <span class="literal">undefined</span>) <span class="keyword">continue</span>;</span><br><span class="line">    now = now.replace(str, conv[str]);</span><br><span class="line">    arr[i].innerHTML = now;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>이렇게 짜여져있었습니다 마찬가지로 반복을 돌고있네요.</p><p>제가 추가한 부분은 간단합니다, <code>Kiwiyou</code>님의 코드처럼</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> stat = <span class="built_in">document</span>.getElementById(<span class="string">'status-table'</span>);</span><br></pre></td></tr></table></figure><p>를 통해서 Element를 불러온 후 인덱스를 통해서 채점 아이디에 접근했습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id = stat.rows[i].cells[<span class="number">0</span>].textContent;</span><br></pre></td></tr></table></figure><p>그 다음 채점 아이디를 비교하면서 정답이 아니고 중복이 아닌 채점 결과에 <code>ㅋ</code>을 붙여줍니다</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(str !== <span class="string">"맞았습니다!!"</span> &amp;&amp; tmp !== id)</span><br><span class="line">    now += <span class="string">'ㅋ'</span>.repeat(t++);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    t = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><code>kiwiyou</code>님처럼 이때 후위 연산자를 이용하여 다음번에 repeat할때는 ㅋ이 한개씩 더 추가되도록 하였습니다.</p><hr><h3 id="전체코드"><a href="#전체코드" class="headerlink" title="전체코드"></a>전체코드</h3><p>이렇게 짜여진 전체 코드는 이러합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"result"</span>);</span><br><span class="line"><span class="keyword">let</span> stat = <span class="built_in">document</span>.getElementById(<span class="string">'status-table'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> RED = <span class="string">"&lt;span class=\"result-wa \"&gt;"</span>;</span><br><span class="line"><span class="keyword">const</span> BLUE = <span class="string">"&lt;span class=\"result-ce \"&gt;"</span>;</span><br><span class="line"><span class="keyword">const</span> GREEN = <span class="string">"&lt;span class=\"result-ac \"&gt;"</span>;</span><br><span class="line"><span class="keyword">const</span> END = <span class="string">"&lt;/span&gt;"</span>;</span><br><span class="line"><span class="keyword">const</span> conv = &#123;</span><br><span class="line">    <span class="string">"맞았습니다!!"</span>: <span class="string">"맞았다!!"</span>,</span><br><span class="line">    <span class="string">"틀렸습니다"</span>: <span class="string">`데이터<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;BLUE&#125;</span>는 <span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;GREEN&#125;</span>맞았습니다.<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;BLUE&#125;</span> 니는 <span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;RED&#125;</span>틀렸습니다.`</span>,</span><br><span class="line">    <span class="string">"런타임 에러"</span>: <span class="string">"사용자 불량"</span>,</span><br><span class="line">    <span class="string">"시간 초과"</span>: <span class="string">`<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;RED&#125;</span>시간은 금이다.`</span>,</span><br><span class="line">    <span class="string">"컴파일 에러"</span>: <span class="string">`컴파일러<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;BLUE&#125;</span>는 <span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;GREEN&#125;</span>맞았습니다.<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;BLUE&#125;</span> 니는 <span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;RED&#125;</span>틀렸습니다.`</span>,</span><br><span class="line">    <span class="string">"메모리 초과"</span>: <span class="string">`<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;RED&#125;</span>다다익램`</span>,</span><br><span class="line">    <span class="string">"출력 초과"</span>: <span class="string">"꼬리가 길면 잡힌다."</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> t = <span class="number">1</span>, tmp = <span class="string">""</span>, id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">    <span class="keyword">let</span> now = arr[i].innerHTML;</span><br><span class="line">    <span class="keyword">let</span> str = arr[i].innerText;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(conv[str] == <span class="literal">undefined</span>) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">    id = stat.rows[i].cells[<span class="number">0</span>].textContent;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(str !== <span class="string">"맞았습니다!!"</span> &amp;&amp; tmp !== id)</span><br><span class="line">        now += <span class="string">'ㅋ'</span>.repeat(t++);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        t = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    now = now.replace(str, conv[str]);</span><br><span class="line"></span><br><span class="line">    tmp = id;</span><br><span class="line">    arr[i].innerHTML = now;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="직접-적용해보자"><a href="#직접-적용해보자" class="headerlink" title="직접 적용해보자"></a>직접 적용해보자</h1><p>이 크롬 익스텐션을 이제 적용해봅시다!</p><p>먼저 제가 올린 <a href="https://github.com/Kinetic27/Hell-BOJ-Verdict-Message-with-kk/releases" rel="external nofollow noopener noreferrer" target="_blank">Hell-BOJ-Verdict-Message-with-kk 레포</a> 릴리즈에 들어가서 <code>Hell-BOJ-Verdict-Message-with-KK.zip</code>를 다운로드하고 적절한 위치에 압축을 풀어주세요!</p><p><img src="2.png" alt="다운!"></p><p>그 다음 크롬을 켠 후 주소창에 <code>chrome://extensions/</code>를 입력, 혹은 <code>설정 - 확장프로그램</code>의 경로를 통해서 <code>확장프로그램</code>설정에 접속합니다!</p><p><img src="3.png" alt="chrome://extensions/"></p><p>이제 우측 위의 개발자 모드를 켜시면</p><blockquote><p>압축해제된 확장 프로그램을 로드합니다.  </p></blockquote><p>라는 버튼이 활성화됩니다!</p><p><img src="4.png" alt="요렇게!"></p><p>이제 아까 확장을 풀어놨던 폴더를 찾아서 선택 버튼을 누르고 <a href="https://www.acmicpc.net/status" rel="external nofollow noopener noreferrer" target="_blank">백준</a>에 들어가면 잘 적용된 모습을 볼 수 있습니다!</p><p><img src="5.png" alt="잘 찾아서 선택"></p><p><img src="6.png" alt="짜쟌"></p><p>제 채점현황을 봅시다!</p><p><img src="7.png" alt="으악"></p><p>엄청난 팩폭으로 PS력을 향상시켜주네요!</p><p>혹시 ㅋ을 빼고싶다면 원본인 나정휘님의 레포 <a href="https://github.com/justiceHui/Hell-BOJ-Verdict-Message" rel="external nofollow noopener noreferrer" target="_blank">Hell-BOJ-Verdict-Message</a>를 받아서 적용을 하거나 바뀌는 멘트를 수정하고싶다면 스크립트 상단의</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> conv = &#123;</span><br><span class="line">    <span class="string">"맞았습니다!!"</span>: <span class="string">"맞았다!!"</span>,</span><br><span class="line">    <span class="string">"틀렸습니다"</span>: <span class="string">`데이터<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;BLUE&#125;</span>는 <span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;GREEN&#125;</span>맞았습니다.<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;BLUE&#125;</span> 니는 <span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;RED&#125;</span>틀렸습니다.`</span>,</span><br><span class="line">    <span class="string">"런타임 에러"</span>: <span class="string">"사용자 불량"</span>,</span><br><span class="line">    <span class="string">"시간 초과"</span>: <span class="string">`<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;RED&#125;</span>시간은 금이다.`</span>,</span><br><span class="line">    <span class="string">"컴파일 에러"</span>: <span class="string">`컴파일러<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;BLUE&#125;</span>는 <span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;GREEN&#125;</span>맞았습니다.<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;BLUE&#125;</span> 니는 <span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;RED&#125;</span>틀렸습니다.`</span>,</span><br><span class="line">    <span class="string">"메모리 초과"</span>: <span class="string">`<span class="subst">$&#123;END&#125;</span><span class="subst">$&#123;RED&#125;</span>다다익램`</span>,</span><br><span class="line">    <span class="string">"출력 초과"</span>: <span class="string">"꼬리가 길면 잡힌다."</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>부분을 잘 수정하면 되겠네요!</p><p>재미있게 읽으셨거나 오류가 발생하신다면 댓글을 달아주시면 감사하겠습니다!!</p><hr><h1 id="도네이션-페이지-추가"><a href="#도네이션-페이지-추가" class="headerlink" title="도네이션 페이지 추가"></a>도네이션 페이지 추가</h1><p>새로 글을 쓰기는 애매해서 이 글 하단에 알려드립니다!</p><p>블로그에 가끔 후원을 보내주시는 분들이 생겨서 <a href="https://kinetic.codes/donations/" rel="external nofollow noopener noreferrer" target="_blank">도네이션 감사 페이지</a>를 제작했습니다!</p><p>후원을 보내주실때 메시지를 같이 보내주실 수 있는데 해당 메시지와 함께 저 페이지에 올려드리고 받은 후원금은 주로 밤샘 작업을 위한 커피로 사용됩니다ㅠㅠ</p><p>혹시 이름, 메시지를 바꾸고싶으신분은 <a href="https://kinetic.codes/about/" rel="external nofollow noopener noreferrer" target="_blank">연락처</a>로 말해주시거나 댓글을 달아주세요!</p>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/09/16/hell-boj-verdict-message/#disqus_thread</comments>
    </item>
    
    <item>
      <title>&#39;I want go home&#39; 레포에서 오픈소스 기여 연습하기</title>
      <link>http://kinetic27.github.io/2020/08/18/i-want-go-home/</link>
      <guid>http://kinetic27.github.io/2020/08/18/i-want-go-home/</guid>
      <pubDate>Mon, 17 Aug 2020 23:46:30 GMT</pubDate>
      <description>
      
        &lt;p&gt;오픈소스 기여를 언젠가는 해보고싶었다…&lt;br&gt;쉽게 연습해보자&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>오픈소스 기여를 언젠가는 해보고싶었다…<br>쉽게 연습해보자</p><a id="more"></a><hr><p>앞으로 종종 재밌거나 유용한 깃허브 repo들을 소개해드릴까 합니다!</p><h1 id="I-want-to-go-home"><a href="#I-want-to-go-home" class="headerlink" title="I want to go home"></a>I want to go home</h1><p>트위터에서 이수호 개발자님의 트윗을 보게 되었습니다.</p><p><a href="https://github.com/riemannulus/i_want_go_home" rel="external nofollow noopener noreferrer" target="_blank">I want go home 프로젝트</a></p><p><img src="twt.png" alt="트윗"></p><p>아직 팀에서 공동작업을 했지만 제가 뭔가 주도적으로 다른 프로젝트에 기여해보고 한적은 없었기 때문에 재밌어보였습니다.</p><blockquote><p>집에 가고 싶을 때 각종 언어(프로그래밍 언어, 인간 언어, 동물 언어 모든 걸 포함)로 집에 가고 싶음을 어필하는 저장소입니다.</p></blockquote><p>제가 <code>fork</code> 했을 당시에는 아직 한글 프로그래밍 언어 <code>아희</code>로 쓰여진 글이 없었기에 <code>아희</code>로 코드를 짜고 <code>PR</code>을 넣었습니다.</p><p>기존 레포를 <code>fork</code>하고 나면 <code>fork</code>한 레포 상단에 풀리퀘를 넣을거냐고 깃허브가 친절히 표시를 해주더군요</p><p>이후에는 각자 자신이 좋아하는 언어들로 코드를 짠 후 커밋을 하면 됩니다.</p><p>제가 겪었던 시행착오들을 적어보겠습니다.</p><hr><h2 id="PR시도-1차"><a href="#PR시도-1차" class="headerlink" title="PR시도 1차"></a>PR시도 1차</h2><p><img src="2.png" alt="PR!!"></p><p>넣었지만 <code>#20</code>에 이미 <code>아희</code>로 커밋을 하신분이 계셨습니다.</p><p>제가 <code>fork</code>하고나고 난 뒤 <code>PR</code>을 날리는 동안 먼저 <code>PR</code>하신분이 있던것이었습니다.</p><p>미쳐 확인을 못했네요.</p><p><code>.aheui</code>로 확장자를 저는 제출했었고 <code>#20</code>을 <code>.aheui</code>로 바꾸는 편으로 PR을 수정해달라는 피드백을 받았습니다</p><p><img src="1.png" alt="#20"></p><hr><h2 id="PR시도-2차"><a href="#PR시도-2차" class="headerlink" title="PR시도 2차"></a>PR시도 2차</h2><p><img src="3.png" alt="#66"></p><p>이번엔 기존 <code>아희(aheui)</code>가 <code>ahui</code>로 작성되어있고 txt로 코드를 적어놓은것을 언급하며 다시 PR을 시도했습니다</p><p><img src="4.png" alt="#66 아앗,..."></p><p>이때까지는 모르고있었습니다….<br>우측 위에 <code>+0 −13</code>이 보이시나요<br>추가된건 없고 제거만 했다는 이야기입니다…</p><p><img src="5.png" alt="#66 아앗,..."></p><p>실수로 작업했던 <code>아희</code> 코드를 파일에 저장시키지 않고 <code>커밋</code>하고 <code>푸시</code>를 했던 것 같습니다…</p><p>착각하고 <code>풀리퀘</code>를 날렸지만 통과가 되어서 <code>아희</code> 레포에 <code>아희</code>로 쓰여진 <code>집에 가고싶다</code>가 없는 상태였습니다.</p><p>다행히 이전에 아희 코드를 작성하셨던분이 이 문제를 발견해주셔서 Revert 되었습니다.</p><p><img src="6.png" alt="Revert!!"></p><hr><h2 id="PR시도-3차"><a href="#PR시도-3차" class="headerlink" title="PR시도 3차"></a>PR시도 3차</h2><p><img src="7.png" alt="리트!"></p><p>다시 <code>fix</code>한 후 <code>PR</code>을 날렸고 이번에는 <code>리뷰</code>까지 확실히 마친 후 <code>머지</code>되었습니다🎉🎉</p><p><img src="8.png" alt="쨘"></p><p>이렇게해서 <code>아희</code>로 저장소에 <code>기여</code>를 하게 되었습니다</p><hr><h1 id="소감"><a href="#소감" class="headerlink" title="소감"></a>소감</h1><p><code>PR</code>을 해보면서 뭔가 재밌기도하고 뿌듯하기도해서 좋았던것 같습니다.</p><p>이번에 여러가지 실수들을 했지만 다음에 실제 프로젝트에 기여를 할 때는 조금 더 성공적으로 <code>PR</code>할 수 있는 밑거름이 된 것 같습니다.</p><p>특히 이번에 실수했던 <code>fork</code>를 했지만 원 저장소가 수정되어서 문제가 발생하는 경우가 있을 수 있기 때문에 이를 조심해야겠습니다.</p><p>또한 꼭 커밋하기 전에 <code>Ctrl + S</code> 를 누르고 <code>저장</code>을 한 후 <code>커밋</code>을 해야하고 <code>풀 리퀘</code>시 다시 코드 리뷰를 통해서 올바르게 올라갔는지 <code>2차 확인</code>을 거쳐야겠다고 생각했습니다.</p><p>이 <a href="https://github.com/riemannulus/i_want_go_home" rel="external nofollow noopener noreferrer" target="_blank">I want go home</a> 프로젝트에서는 <code>프로그래밍 언어</code> 뿐만이 아니라 <code>인공어</code>, <code>동물어</code> 등등 다양한 방법으로 <code>집가고싶다</code>를 표현하며 PR을 연습할 수 있으니 한번 도전해보시는것도 좋을 것 같습니다!</p><p><img src="9.png" alt=":god:"></p><p>다뉴님께서 이 프로젝트에 많은 기여를 하셨습니다.</p><p>어떻게 시작해야할지 모르겠다면 다뉴님이 <code>PR</code>을 엄청 잘 하고계시니 다뉴님의 <code>PR</code>을 참고하셔서 이슈를 남기셔도 좋을 것 같습니다.</p><p>집가고싶다……</p><p><img src="10.png" alt="이슈 예시"></p><hr><p><strong>글에 사용을 허락해주신 <a href="https://twitter.com/_danuel_" rel="external nofollow noopener noreferrer" target="_blank">다뉴</a>님 감사합니다 🙌</strong></p>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/08/18/i-want-go-home/#disqus_thread</comments>
    </item>
    
    <item>
      <title>깃헙 프로필 README로 5분만에 만들기</title>
      <link>http://kinetic27.github.io/2020/07/14/git-profile/</link>
      <guid>http://kinetic27.github.io/2020/07/14/git-profile/</guid>
      <pubDate>Tue, 14 Jul 2020 14:37:54 GMT</pubDate>
      <description>
      
        &lt;p&gt;Github Profile README로 5분만에 만들기!&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>Github Profile README로 5분만에 만들기!</p><a id="more"></a><hr><p><a href="https://github.com/" rel="external nofollow noopener noreferrer" target="_blank">Github</a>가 최근에 자신의 깃허브 페이지 메인에 <code>README.md</code>를 통해서 자신의 프로필을 깃허브에 띄울 수 있는 기능을 추가했습니다.</p><p><img src="0.png" alt="프로필 이미지"></p><p>README를 이용하면 기존의 몇가지 안되는 옵션보다 시각적으로 잘 드러나고 유연하게 꾸밀 수 있고,<br>Markdown 또한 손쉽게 익힐 수 있어서 잘 이용한다면 개성넘치는 깃허브 메인을 만들어 볼 수도 있겠네요!</p><p>우리가 필요한건</p><ul><li>없어도 좋지만 있으면 더욱 좋은 markdown 기초 지식</li><li>깃허브 계정</li></ul><p>이 두가지면 충분합니다!</p><hr><h1 id="깃허브에-README-띄우기"><a href="#깃허브에-README-띄우기" class="headerlink" title="깃허브에 README 띄우기"></a>깃허브에 README 띄우기</h1><p>이 기능을 이용하시려면 우선 깃헙에서 해당 기능을 활성화 시켜야합니다.</p><p><img src="1.png" alt="repo 생성"></p><p>우선 화면 우측 상단에 위치한 <code>New repository</code>를 눌러서 새로운 저장소를 만들어줄겁니다!</p><p>이때 일반 <code>repository</code>가 아니라 프로필 메인용 <code>README</code> repo로 인식되게 해야합니다.</p><p><img src="2.png" alt="이름 일치"></p><p>위의 이미지에서 볼 수 있듯이 <strong><em>내 계정의 아이디</em></strong> 를 repo 이름으로 설정해주시면 됩니다.</p><p>올바르게 설정하셨다면 위 사진처럼 밑에 초록색 창이 뜨면서 <code>You found a secret!</code>이라고 반겨줍니다.</p><p><img src="3.png" alt="주의"></p><p>이떄 당연히 repo는 <code>public</code>으로 해두셔야하고 저는 편의상</p><ul><li><input checked disabled type="checkbox"> Initialize this repository with a README</li></ul><p>를 체크해서 바로 README를 생성하겠습니다!</p><p>이제 깃허브 메인에 방금 생성한 <code>repo</code>의 <code>README.md</code>가 깃허브 메인에 뜰겁니다!!🎉🎉</p><hr><h1 id="README꾸미기"><a href="#README꾸미기" class="headerlink" title="README꾸미기"></a>README꾸미기</h1><p><code>README.md</code>는 깃허브 마크다운으로 이루어지기 때문에 저희는 <code>이미지</code>, <code>GIF</code>, <code>이모티콘</code>, <code>텍스트</code>등을 넣을 수 있고</p><p><a href="https://github.com/features/actions" rel="external nofollow noopener noreferrer" target="_blank">깃헙 액션</a>을 이용해서 동적으로 데이터를 가져와서 띄워주는등 무궁무진한 활용이 가능합니다.</p><p>우선 좋은 저장소를 하나 추천드리자면 <a href="https://github.com/kautukkundan/Awesome-Profile-README-templates" rel="external nofollow noopener noreferrer" target="_blank">Awesome-Profile-README-templates</a>에서 <strong>다양한 재밌는 프로필</strong> 예제를 접할 수 있고 여기서 영감을 얻을 수 있습니다!</p><p>그리고 마크다운이 익숙하지 않으신 분은</p><blockquote><p><a href="https://guides.github.com/pdfs/markdown-cheatsheet-online.pdf" rel="external nofollow noopener noreferrer" target="_blank">https://guides.github.com/pdfs/markdown-cheatsheet-online.pdf</a></p></blockquote><p>을 읽어보시면 기초적인 마크다운 지식을 습득하실 수 있습니다!</p><hr><h2 id="수정-방법"><a href="#수정-방법" class="headerlink" title="수정 방법"></a>수정 방법</h2><p>간단합니다!</p><p><img src="9.png" alt="자신의 깃헙 repo"></p><p>방금 생성한 자신의 깃허브 REPO에 들어가셔서 수정버튼을 눌러주시면 됩니다!</p><p>그리고 사진등 파일 업로드는 <code>Add file</code>을 통해서 깃허브에 올려주신 다음<br><code>ReadMe</code>에 추가하실 때</p><p><img src="10.png" alt="절대경로"></p><p>꼭 해당 파일의 절대경로를 이용해서 업로드해주세요!</p><hr><h2 id="예제-소개"><a href="#예제-소개" class="headerlink" title="예제 소개"></a>예제 소개</h2><p>제 깃허브 프로필 같은 경우는</p><p><img src="0.png" alt="제 프로필입니다"></p><p>이런식으로 꾸며놓았는데요</p><p>이 중에서도 방문수(hits)와 제 깃헙 상태(?)와 밑의 버튼들을 설명해드리겠습니다!<br><code>(gif는 해당 repo에 업로드하신 후 사진과 같은 방법으로 넣으시면 됩니다)</code></p><hr><h3 id="hits-방문수"><a href="#hits-방문수" class="headerlink" title="hits(방문수)"></a>hits(방문수)</h3><p><img src="4.png" alt="hits"></p><p>먼저 <code>hits</code>입니다! <a href="https://hits.seeyoufarm.com/" rel="external nofollow noopener noreferrer" target="_blank">https://hits.seeyoufarm.com/</a> 로 들어가신 다음 스크롤을 내리시면 창이 하나 뜹니다.</p><p><img src="5.png" alt="hits"></p><p>여기에 깃헙 아이디를 적고 copy를 누르고 붙여 넣으시면 끝입니다!</p><p>간단하죠?</p><h3 id="Github-ReadMe-Stats"><a href="#Github-ReadMe-Stats" class="headerlink" title="Github ReadMe Stats"></a>Github ReadMe Stats</h3><p><img src="6.png" alt="Github Status"></p><p>이 기능은 <a href="https://github.com/anuraghazra/github-readme-stats" rel="external nofollow noopener noreferrer" target="_blank">anuraghazra 개발자의 github-readme-stats</a>를 이용할겁니다!</p><p>들어가시면 다양한 예제가 있습니다.</p><p>저같은 경우는</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![Kinetic27&#39;s github stats](https:&#x2F;&#x2F;github-readme-stats.vercel.app&#x2F;api?username&#x3D;Kinetic27&amp;show_icons&#x3D;true)</span><br></pre></td></tr></table></figure><p>와 같이 이미지 마크다운으로 이렇게 넣어주었습니다.</p><p>저걸 복사하시고 []안의 이미지 소개 문구, ()안의 링크의 아이디만 본인의 것으로 교체해주시면 문제없이 작동합니다!</p><h3 id="Solved-ac"><a href="#Solved-ac" class="headerlink" title="Solved.ac"></a>Solved.ac</h3><p><img src="11.png" alt="Solved.ac"></p><p>마찬가지로 <code>Solved.ac</code>의 티어를 예쁘게 표시해주고 형식은 <code>마크다운</code>입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[![solved.ac tier](http:&#x2F;&#x2F;mazassumnida.wtf&#x2F;api&#x2F;generate_badge?boj&#x3D;kinetic27)](https:&#x2F;&#x2F;solved.ac&#x2F;kinetic27)</span><br></pre></td></tr></table></figure><p>여기서 <code>kinetic27</code>을 자신의 아이디로 수정하시면 되겠군요.</p><p><a href="https://cocosy.tistory.com/" rel="external nofollow noopener noreferrer" target="_blank">@ccocosy</a>님이 개발하셨습니다! <a href="https://github.com/mazassumnida/mazassumnida" rel="external nofollow noopener noreferrer" target="_blank">깃허브</a></p><h3 id="버튼들"><a href="#버튼들" class="headerlink" title="버튼들"></a>버튼들</h3><p>저는 버튼을 생성할 때 <a href="https://shields.io/" rel="external nofollow noopener noreferrer" target="_blank">shields.io</a>를 사용했습니다!</p><p><img src="7.png" alt="검색"></p><p>사이트 제목 바로 아래 밑줄이 <code>입력창</code>입니다</p><p>원하시는 커뮤니티, 웹 사이트 등등을 입력하시면 이미 만들어진 예제들이 나옵니다!</p><p>예시로 <code>youtube</code>를 검색한 다음 아무거나 하나를 눌러보겠습니다.</p><p><img src="8.png" alt="쨘"></p><p>요구하는 칸을 채워준후 <code>markdown 복사</code> 버튼을 누르니</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![YouTube Video Likes](https:&#x2F;&#x2F;img.shields.io&#x2F;youtube&#x2F;likes&#x2F;abBdk8bSPKU?style&#x3D;social)</span><br></pre></td></tr></table></figure><p>와 같이 마크다운 텍스트가 복사됩니다.  </p><p>이것도 <code>ReadMe</code>에 넣으시면 잘 작동할겁니다!</p><hr><h1 id="끝"><a href="#끝" class="headerlink" title="끝"></a>끝</h1><p>지금까지 ReadMe 프로필을 추가하고 활용하는 방법에대해서 알아봤는데요.</p><p>생각보다 시간은 오래 안걸리니 바로 적용해보셨으면 좋겠습니다!</p><p><code>제 github에 가시면 제가 어떻게 작성했는지 참고하실 수 있습니다</code><br><a href="https://raw.githubusercontent.com/Kinetic27/Kinetic27/master/README.md" rel="external nofollow noopener noreferrer" target="_blank">제 ReadMe raw 파일</a></p>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/07/14/git-profile/#disqus_thread</comments>
    </item>
    
    <item>
      <title>댓글기능 테스트</title>
      <link>http://kinetic27.github.io/2020/07/04/tmp-comment-test/</link>
      <guid>http://kinetic27.github.io/2020/07/04/tmp-comment-test/</guid>
      <pubDate>Fri, 03 Jul 2020 15:50:39 GMT</pubDate>
      <description>
      
        &lt;p&gt;테스트 페이지입니다.&lt;/p&gt;
&lt;p&gt;// title&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>테스트 페이지입니다.</p><p>// title</p><a id="more"></a><hr><p>밑에 댓글 기능을 추가했습니다!!</p><p>테스트용 페이지니 마음껏 달아주세요!!!!</p>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/07/04/tmp-comment-test/#disqus_thread</comments>
    </item>
    
    <item>
      <title>BOJ 9735 삼차 방정식 풀기 Kotlin 풀이</title>
      <link>http://kinetic27.github.io/2020/06/23/boj-9735-solutions-of-cubic-equation/</link>
      <guid>http://kinetic27.github.io/2020/06/23/boj-9735-solutions-of-cubic-equation/</guid>
      <pubDate>Mon, 22 Jun 2020 16:59:07 GMT</pubDate>
      <description>
      
        &lt;p&gt;[9375] 삼차 방정식, 코틀린으로 풀어보자&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>[9375] 삼차 방정식, 코틀린으로 풀어보자</p><a id="more"></a><hr><div style="callout:warning">    해당 포스트의 풀이를 그대로 제출하여 순위나 티어를 올리는 행위는 금지됩니다.</div><h1 id="문제-소개"><a href="#문제-소개" class="headerlink" title="문제 소개"></a>문제 소개</h1><p>이번에 풀어볼 <a href="https://www.acmicpc.net/problem/9735" rel="external nofollow noopener noreferrer" target="_blank">문제</a>는 9735번 <strong>삼차 방정식 풀기 입니다.</strong><br><del>썸네일과 다르게 현재는 플레1로 떨어졌다고합니다.</del><br><img src="problem.png" alt="problem"></p><hr><h1 id="문제-접근"><a href="#문제-접근" class="headerlink" title="문제 접근"></a>문제 접근</h1><hr><h2 id="근의-공식"><a href="#근의-공식" class="headerlink" title="근의 공식"></a>근의 공식</h2><p>처음 이 문제를 보자마자 삼차 방정식은 이미 근의 공식이 나와있으니 공식에 대입해서 문제를 풀면 되는줄 알고 공식에 대입해보려 했지만</p><p><img src="1.png" alt="네 털렸습니다"></p><blockquote><p>해의 절대/상대 오차는 10^-4까지 허용한다</p></blockquote><p>라는 말이 있는것으로 보아서 오차 문제는 아닌것같고… 제가 어딘가 놓친것 같습니다.<br>식이 엄청나게 길거든요.</p><p><a href="https://ko.wikipedia.org/wiki/%EC%82%BC%EC%B0%A8_%EB%B0%A9%EC%A0%95%EC%8B%9D" rel="external nofollow noopener noreferrer" target="_blank">삼차 방정식 위키피디아</a></p><p><img src="2.jpg" alt="엄청나게.. 깁니다..."></p><p>그래서 다른 방법을 시도해봤습니다.</p><hr><h2 id="이차-방정식으로-차수-낮추기"><a href="#이차-방정식으로-차수-낮추기" class="headerlink" title="이차 방정식으로 차수 낮추기"></a>이차 방정식으로 차수 낮추기</h2><hr><h3 id="문제-조건"><a href="#문제-조건" class="headerlink" title="문제 조건"></a>문제 조건</h3><p>문제를 다시 읽어보세요.  </p><p>엄청난 조건이 숨어있습니다.</p><p>바로 <code>입력으로 주어지는 방정식은 정수 해를 적어도 한 개 갖는다</code>인데요</p><p>이 조건이 있기 때문에 항상 <code>Ax^3 + Bx^2 + Cx + D = 0</code> 식을<br><code>(x + a)(bx^2 + cx + d) = 0</code> 꼴로 인수분해가 가능하다는게 보장됩니다!!</p><p>그럼 고등학교 수준에서 문제를 해결할 수 있습니다.</p><hr><h1 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h1><hr><h2 id="보장된-정수-해-찾기"><a href="#보장된-정수-해-찾기" class="headerlink" title="보장된 정수 해 찾기"></a>보장된 정수 해 찾기</h2><p>그럼 이제 보장된 정수 해가 하나있으니 이를 찾아봅시다.</p><p>저는 사실 <strong>유리근 정리</strong> 를 사용해서 문제를 해결하려고 시도했었습니다.  </p><p>유리근 정리는 무엇일까요?</p><p><img src="3.png" alt="유리근 정리"><br><img src="4.png" alt="유리근 정리 증명"><br><a href="http://blog.naver.com/lsylsy0623/221252424611" rel="external nofollow noopener noreferrer" target="_blank">위 사진 출처</a></p><br><br><p>저 삼차 방정식에서 ±(D의약수) / (A의약수) 중에 정수 해가 하나 있다는 뜻이죠.</p><p>반복을 돌면서</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> (a, b, c, d) = readLine()!!.split(<span class="string">" "</span>).map &#123; i -&gt; i.toInt() &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">when</span> (d) &#123;</span><br><span class="line">    <span class="number">0</span> -&gt; answer(listOf(a.toDouble(), b.toDouble(), c.toDouble()), <span class="number">0.0</span>)</span><br><span class="line">    <span class="keyword">else</span> -&gt; &#123;</span><br><span class="line">        <span class="keyword">var</span> xList = a.divisor().map &#123; ax -&gt; d.divisor().map &#123; dx -&gt; dx.toDouble() / ax &#125; &#125;.flatten().distinct()</span><br><span class="line"></span><br><span class="line">        xList += xList.map &#123; x -&gt; -x &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> x1 = xList.filter &#123; x -&gt; a*x*x + b*x + c + d/x == <span class="number">0.0</span> &#125;[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment">// x1이 정수 해 1번임</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>정수 해 1개를 x1에 담아냅니다.</p><p>이 중 <code>.map</code>을 이용해서 ±(D의약수) / (A의약수)를 구하고 방정식에 넣어서 0이 되는지 확인하는 코드죠.</p><p>작동은 합니다만 문제가 있었습니다.</p><p><img src="5.png" alt="메모리초과 ㅠㅠ"></p><p>이 방식은 <code>A</code>와 <code>D</code>에 따라서 시간 소요가 너무 많이 됩니다..</p><p>다른 방식을 찾아야합니다!</p><hr><h2 id="정수-해-메모리-초과-해결"><a href="#정수-해-메모리-초과-해결" class="headerlink" title="정수 해 메모리 초과 해결"></a>정수 해 메모리 초과 해결</h2><blockquote><p>A, B, C, D는 -2,000,000보다 크거나 같고, 2,000,000보다 작거나 같은 정수이고, A는 0이 아니다. 모든 해는 -1,000,000보다 크거나 같고, 1,000,000보다 작거나 같다. 주어지는 방정식의 해의 차이는 10^-4보다 크다.</p></blockquote><p>이 말은 정수 해니까 저희가 아무리 반복을 많이 돌아도 <strong><em>(-2,000,000~2,000,000)</em></strong> 만 돌면 해결되니까 생각보다 많은 처리량은 아님을 알 수 있습니다.</p><p>그래서 직접 돌기로했습니다.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">when</span> (d) &#123;</span><br><span class="line">    <span class="number">0.0</span> -&gt; answer(listOf(a, b, c), <span class="number">0.0</span>)</span><br><span class="line">    <span class="keyword">else</span> -&gt; &#123;</span><br><span class="line">        <span class="keyword">for</span> (x <span class="keyword">in</span> -<span class="number">2000000</span>..<span class="number">2000000</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a * x * x + b * x + c + d / x == <span class="number">0.0</span>) &#123;</span><br><span class="line">                answer(getQuadraticEquation(a, b, c, x.toDouble()), x.toDouble())</span><br><span class="line">                <span class="comment">// 하나 구하면 break걸고 다른 함수로 계수를 넘겨줬어요</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>돌면서 직접 식에 넣어보고 0이 되는지 확인할껀데 혹시 모를 <code>수 범위 초과</code>를 피하기 위해서 양변을 <code>x</code>로 나눠서 진행했습니다.</p><p>그 다음 2차 방정식의 해를 구할 차례입니다!</p><hr><h2 id="이차방정식의-해를-구해보자"><a href="#이차방정식의-해를-구해보자" class="headerlink" title="이차방정식의 해를 구해보자"></a>이차방정식의 해를 구해보자</h2><p>우선 아까 한 정수해를 구한다면 <code>Ax^3 + Bx^2 + Cx + D = 0</code>식을<br>\[(x - x_1)(Ax_1^2 + (Ax_1 + B)x + (Ax_1 + B)x_1 + C)\]</p><p>으로 변형 할 수있는데요.</p><p>이는 조립제법에서 얻어진 결과입니다. (인수분해도 똑같이 나와요)</p><p><img src="5.png" alt="이해를 돕는 사진"><br><a href="https://m.post.naver.com/viewer/postView.nhn?volumeNo=14619344&memberNo=1437154" rel="external nofollow noopener noreferrer" target="_blank">위 사진 출처</a></p><br><br><p>이제 저희는 식을 이차 방정식으로 분해했고 답은 <code>실수 해</code>만을 출력하기 때문에 저희에게는 2가지 경우가 있습니다</p><hr><h2 id="판별식"><a href="#판별식" class="headerlink" title="판별식"></a>판별식</h2><p>판별식이란 이차방정식의 계수들 간의 관계식으로, 그 근의 성질에 대한 정보를 알려 줍니다.</p><p>쉽게 말해서 판별식을 D(b^2 - 4ac)라고 할 때</p><table><thead><tr><th align="center">판별식 D</th><th align="center">근의 개수</th></tr></thead><tbody><tr><td align="center">D &gt; 0</td><td align="center">서로 다른 두 실근</td></tr><tr><td align="center">D == 0</td><td align="center">서로 같은 두 실근(중근)</td></tr><tr><td align="center">D &lt; 0</td><td align="center">서로 다른 두 허근</td></tr></tbody></table><p>저희는 이미 정수해를 하나 가지고있고 <code>D &lt; 0</code>가 아닌 경우에는 근의 공식을 사용하고 중복을 제거하고 정수 해와 합치면 답이겠네요.</p><p>근의 공식!  </p><p><img src="7.png" alt="근의 공식: 출처 https://j1w2k3.tistory.com/1255"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">formula</span><span class="params">(a: <span class="type">Double</span>, b: <span class="type">Double</span>, c: <span class="type">Double</span>)</span></span> =</span><br><span class="line">    with(Math.sqrt(b * b - <span class="number">4</span> * a * c)) &#123;</span><br><span class="line">        listOf((-b + <span class="keyword">this</span>) / (<span class="number">2</span> * a), (-b - <span class="keyword">this</span>) / (<span class="number">2</span> * a))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">answer</span><span class="params">(x: <span class="type">List</span>&lt;<span class="type">Double</span>&gt;, x1: <span class="type">Double</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> (a1, b1, c1) = x</span><br><span class="line">    <span class="keyword">val</span> dFormula = b1 * b1 - <span class="number">4</span> * a1 * c1</span><br><span class="line"></span><br><span class="line">    println(</span><br><span class="line">        <span class="keyword">when</span> &#123;</span><br><span class="line">            dFormula &lt; <span class="number">0</span> -&gt; listOf(x1)</span><br><span class="line">            <span class="keyword">else</span> -&gt; formula(a1, b1, c1) + x1</span><br><span class="line">        &#125;.distinct().sorted().map &#123; n -&gt; String.format(<span class="string">"%.4f"</span>, n + <span class="number">0.0</span>) &#125;.distinct().joinToString(<span class="string">" "</span>)</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>formula함수</code>에서 판별식을 구하고, 중복을 제거하는 <code>distinct()</code>를 사용해서 <code>D &lt; 0</code>만 거르고 중복을 제거했어요!</p><p>정답 형식에 맞게 <code>String.format(&quot;%.4f&quot;, n + 0.0)</code>을 이용해서 소수점 4자리까지 표시하도록 셋팅했습니다.</p><p>이것으로 문제가 풀렸습니다.</p><hr><h1 id="정답-코드"><a href="#정답-코드" class="headerlink" title="정답 코드"></a>정답 코드</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span> &#123;</span><br><span class="line">    repeat(readLine()!!.toInt()) &#123;</span><br><span class="line">        <span class="keyword">val</span> (a, b, c, d) = readLine()!!.split(<span class="string">" "</span>).map &#123; i -&gt; i.toDouble() &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">when</span> (d) &#123;</span><br><span class="line">            <span class="number">0.0</span> -&gt; answer(listOf(a, b, c), <span class="number">0.0</span>)</span><br><span class="line">            <span class="keyword">else</span> -&gt; &#123;</span><br><span class="line">                <span class="keyword">for</span> (x <span class="keyword">in</span> -<span class="number">2000000</span>..<span class="number">2000000</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (a * x * x + b * x + c + d / x == <span class="number">0.0</span>) &#123;</span><br><span class="line">                        answer(getQuadraticEquation(a, b, c, x.toDouble()), x.toDouble())</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getQuadraticEquation</span><span class="params">(a: <span class="type">Double</span>, b: <span class="type">Double</span>, c: <span class="type">Double</span>, x: <span class="type">Double</span>)</span></span> =</span><br><span class="line">    listOf(a, a * x + b, (a * x + b) * x + c)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">formula</span><span class="params">(a: <span class="type">Double</span>, b: <span class="type">Double</span>, c: <span class="type">Double</span>)</span></span> =</span><br><span class="line">    with(Math.sqrt(b * b - <span class="number">4</span> * a * c)) &#123;</span><br><span class="line">        listOf((-b + <span class="keyword">this</span>) / (<span class="number">2</span> * a), (-b - <span class="keyword">this</span>) / (<span class="number">2</span> * a))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">answer</span><span class="params">(x: <span class="type">List</span>&lt;<span class="type">Double</span>&gt;, x1: <span class="type">Double</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> (a1, b1, c1) = x</span><br><span class="line">    <span class="keyword">val</span> dFormula = b1 * b1 - <span class="number">4</span> * a1 * c1</span><br><span class="line"></span><br><span class="line">    println(</span><br><span class="line">        <span class="keyword">when</span> &#123;</span><br><span class="line">            dFormula &lt; <span class="number">0</span> -&gt; listOf(x1)</span><br><span class="line">            <span class="keyword">else</span> -&gt; formula(a1, b1, c1) + x1</span><br><span class="line">        &#125;.distinct().sorted().map &#123; n -&gt; String.format(<span class="string">"%.4f"</span>, n + <span class="number">0.0</span>) &#125;.distinct().joinToString(<span class="string">" "</span>)</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h1><p>지금 글 쓰는 시점에서 다른 분의 코드를 보니 <code>Kotlin</code> 제출자는 저를 제외하고는 한분 계시는데 엄청 깔끔하게 문제를 푸셨으니 한번 문제 풀이에 여러가지 방법으로 도전하시고 다른 분의 코드를 참고해보세요!</p><p>이 문제를 풀고 골드로 승급했습니다. 😂</p><blockquote><p>문제 출처: 백준, <a href="https://www.acmicpc.net/problem/9735" rel="external nofollow noopener noreferrer" target="_blank">https://www.acmicpc.net/problem/9735</a></p></blockquote>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/06/23/boj-9735-solutions-of-cubic-equation/#disqus_thread</comments>
    </item>
    
    <item>
      <title>🐑블로그 개선후기, 🎉Solved.ac 골드 달성</title>
      <link>http://kinetic27.github.io/2020/06/22/solved-ac-gold-achieve/</link>
      <guid>http://kinetic27.github.io/2020/06/22/solved-ac-gold-achieve/</guid>
      <pubDate>Sun, 21 Jun 2020 17:44:08 GMT</pubDate>
      <description>
      
        &lt;p&gt;[잡담] 블로그 개선, 솔브드 골드 달성🎉&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>[잡담] 블로그 개선, 솔브드 골드 달성🎉</p><a id="more"></a><hr><h1 id="블로그-개선"><a href="#블로그-개선" class="headerlink" title="블로그 개선"></a>블로그 개선</h1><p>한동안 코로나 여파와 지필고사 준비 때문에 블로그쪽은 신경을 많이 못썼습니다.</p><p>블로그에 현재 Icarus테마를 사용하고있는데 문제가 생겼습니다.</p><p>Icarus테마가 원래는 <code>2.0</code>버전으로 다른 헥소 테마와 마찬가지로 <code>ejs</code>로 구성이 되어있었는데요.</p><p><code>3.0</code> 소식이 뜨더니 <code>JSX</code>와 <code>Inferno.js</code>기반으로 싹 다 레이아웃을 갈아엎었더군요.</p><p><a href="https://github.com/ppoffice/hexo-theme-icarus/releases" rel="external nofollow noopener noreferrer" target="_blank">헥소 릴리즈 노트</a></p><p>즉, 예전에 썼던 <a href="https://kinetic.codes/2020/03/06/build-blog-with-hexo-github/" rel="external nofollow noopener noreferrer" target="_blank">Hexo Blog 설치글</a>이 먹히지 않는다는 소식이었습니다.</p><p>다행히 2.0버전을 아직도 배포는 하고있기에 임시 방편으로 2.0으로 사용하라고 적어두긴 했습니다만 찜찜해서 제가 3.0을 적용해보려고했습니다.</p><h2 id="Gatsby로"><a href="#Gatsby로" class="headerlink" title="Gatsby로?"></a>Gatsby로?</h2><p>사실 웹 지식이 많이 없는지라 <code>Icarus 3.0</code>에 지금과 같은 블로그를 다시 만들 수 없을 줄 알고 요즘 유행같아보이는 <code>Gatsby</code>를 설치해서 <code>Hexo</code> 대신 사용해보려고 했습니다.</p><p>근데 <code>Gatsby</code>는 웹 프론트엔드에 관한 지식이 없으면 미리 만들어진걸 받아서 해야하는데</p><p>괜찮은 스타터 테마들은 <code>Gatsby</code>버전이 바뀌면서 호환 문제가 생기거나 5시간째 이미지를 프로세싱하는 무한 로딩 오류가 뜬다던지(…)</p><p>결국 이슈하나 던져두고 괜찮은 다른 테마 하나 건져서 설치까지는 해놨지만 역시 <code>Hexo Icarus</code>가 너무 강력하더군요</p><p><img src="gatsby-blog.jpg" alt="Gastby Blog"></p><h2 id="다시-Icarus-3-0으로"><a href="#다시-Icarus-3-0으로" class="headerlink" title="다시 Icarus 3.0으로"></a>다시 Icarus 3.0으로</h2><p>그래서 시험도 끝났겠다 예전에 포기했던 3.0버전을 적용하려 다시 Icarus 테마 적용을 시도했습니다.</p><p>우선 제일 크게 바뀐점은 <code>ejs -&gt; jsx</code>로 <a href="https://kinetic.codes/2020/03/06/build-blog-with-hexo-github/#%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EC%84%A4%EC%B9%98" rel="external nofollow noopener noreferrer" target="_blank">이전에 포스팅했던 플러그인들</a>이 먹지 않습니다…</p><p>저기에 소개한 플러그인은 제 예전 2.0 블로그에 전부 적용해뒀었는데요.</p><ul><li>hexo-autonofollow</li><li>hexo-auto-canonical</li><li>hexo-generator-seo-friendly-sitemap</li><li>hexo-generator-feed</li><li>hexo-related-popular-posts</li><li>hexo-generator-robotstxt</li><li>hexo-asset-link</li></ul><p>이 중 hexo테마에 직접 코드를 추가해서 적용했던 <code>hexo-related-popular-posts</code>와 <code>hexo-auto-canonical</code>이 문제가 된겁니다.</p><p>관련 포스트 기능은 우선 사용을 해제한 상태고 <code>auto-canonical</code>같은 경우는 이미 hexo테마에서 어느정도 커버를 쳐주는것 같아서 빼기로했습니다.</p><p>사실 이 두개는 현재 icarus 3.0에와서 큰 문제는 없는 것 같더라고요.<br>문제가 생기면 추후에 다시 알아봐야겠습니다.</p><p>그리고 화면 우측 아래에 띄워진 <code>Live2d</code>도 그대로 <code>HTML</code>코드에 심어주고 <code>styl</code>파일에 <code>커스텀 info 임베딩</code>도 추가했습니다.</p><div style="callout:info">    이거요</div><p>이 작업을 끝내고 보니까 <code>Icarus</code>도 미안했는지 이번 업데이트에 사이버 펑크 테마를 추가해줬더라고요.</p><p>그래서 냅다 적용을 해봤습니다.</p><p>다행히 현재 <code>낮/밤</code> 모드를 <code>icarus</code>에서 <code>fork</code>해서 작업물을 공유해주시는 분이(아마 Icarus 제작자분중 한분) 발빠르게 <code>낮/밤</code>기능을 넣어주셔서 보기 싫으면 밤모드를 쓰면 되는 관계로 현재 제 블로그는 <code>사이버펑크/밤</code>으로 셋팅이 되어있습니다만 밤모드에 일부분 <code>사이버 펑크 테마</code>가 묻어있네요.</p><p>결국 현재 보시는것과 같은 블로그가 완성되었습니다!🎊🎉✨</p><h1 id="Solved-ac"><a href="#Solved-ac" class="headerlink" title="Solved.ac"></a>Solved.ac</h1><p>사실 이번에 하고 싶었던 것 중 하나가 알고리즘 공부하기였습니다.</p><p>프로젝트 보다도 가볍게 시작할 수 있고 짧은 문제는 금방 풀리는 장점덕에 공부하면서 틈틈히 시도할 수 있고, 마침 집에 종만북 1, 2를 사두고 조금 읽은지라 마저 읽으면서 진행하려던 찰나, <a href="https://solved.ac/" rel="external nofollow noopener noreferrer" target="_blank">https://solved.ac/</a>가 알파버전이 릴리즈되어서 당장 가입하고 백준과 연결했습니다.</p><p>솔브드는 백준과 연동하여 문제들에 태그와 난이도를 붙여주는데 특히 푼 문제에 기반하여 경험치를 주고 이를 게임처럼 랭킹으로 보여주는것이 인상깊었습니다.</p><p>저는 쉬운 브론즈 문제 그것도 5티어 문제를 50문제쯤 풀어두고 실버1문제, 골드1문제가 풀려있는 상태여서 처음에는 실버 5티어였습니다.</p><p>그러던 와중에 다이아 문제 하나를 우연히 SNS에서 보게되었는데 이게 고등학교 수학을 이용하면 저도 풀 수 있겠더라고요.</p><p>그래서 고인물님이 주신 힌트(고등 수학으로 가능하다)를 듣고 Kotlin으로 2일동안 삽질을 한 결과…</p><p><img src="9735.png" alt="9735으악"></p><p>결국 <a href="http://noj.am/9735" rel="external nofollow noopener noreferrer" target="_blank">이 문제</a>를 풀었습니다.</p><blockquote><p>나중에 풀이 글을 쓸 예정입니다.</p></blockquote><p>티어별로 주는 경험치가 확 차이나다 보니까 다이아5문제를 푸니까 순식간에 골드로 승급했습니다!🎉🎉🎉🎉</p><p><img src="gold.png" alt="골드승급!"></p><p>앞으로도 틈틈히 <code>ps</code>를 열심히 공부해서 <code>골드 3</code>을 넘어서 플레까지 가고싶네요.</p><hr><p>그럼 오늘도 늦었으니 자러가보겠습니다.👋(4시)</p>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/06/22/solved-ac-gold-achieve/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Level 1] 프로그래머스 자연수 뒤집어 배열로 만들기 코틀린 풀이</title>
      <link>http://kinetic27.github.io/2020/03/13/make-reverse-natural-number-array/</link>
      <guid>http://kinetic27.github.io/2020/03/13/make-reverse-natural-number-array/</guid>
      <pubDate>Fri, 13 Mar 2020 10:53:12 GMT</pubDate>
      <description>
      
        &lt;p&gt;[Level 1] 프로그래머스 자연수 뒤집어 배열로 만들기 코틀린 풀이&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>[Level 1] 프로그래머스 자연수 뒤집어 배열로 만들기 코틀린 풀이</p><a id="more"></a><hr><h1 id="문제-소개"><a href="#문제-소개" class="headerlink" title="문제 소개"></a>문제 소개</h1><p>이번에 풀어볼 <a href="https://programmers.co.kr/learn/courses/30/lessons/12932" rel="external nofollow noopener noreferrer" target="_blank">문제</a>는 자연수를 주면 뒤집고 배열로 만들면 되는 쉬운 문제입니다.</p><p><img src="problem.png" alt="problem"></p><hr><h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><p>방금전에 올린 <a href="https://kinetic27.github.io/2020/03/13/add-digits/">포스트</a>와 풀이는 비슷합니다.</p><p>다만 <code>sum()</code> 대신 뒤집고(<code>.reversed()</code>) <code>.toIntArray()</code>로 바꿔주면 됩니다.</p><hr><h1 id="정답-코드"><a href="#정답-코드" class="headerlink" title="정답 코드"></a>정답 코드</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(n: <span class="type">Long</span>)</span></span>: IntArray =</span><br><span class="line">        n.toString().map &#123; it.toInt() - <span class="number">48</span> &#125;.reversed().toIntArray()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>전 문제와 거의 똑같네요 😅</p><blockquote><p>출처: 프로그래머스 코딩 테스트 연습, <a href="https://programmers.co.kr/learn/challenges" rel="external nofollow noopener noreferrer" target="_blank">https://programmers.co.kr/learn/challenges</a></p></blockquote>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/03/13/make-reverse-natural-number-array/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Level 1] 프로그래머스 자릿수 더하기 코틀린 풀이</title>
      <link>http://kinetic27.github.io/2020/03/13/add-digits/</link>
      <guid>http://kinetic27.github.io/2020/03/13/add-digits/</guid>
      <pubDate>Fri, 13 Mar 2020 10:28:39 GMT</pubDate>
      <description>
      
        &lt;p&gt;[Level 1] 프로그래머스 자릿수 더하기 코틀린 풀이&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>[Level 1] 프로그래머스 자릿수 더하기 코틀린 풀이</p><a id="more"></a><hr><h1 id="문제-소개"><a href="#문제-소개" class="headerlink" title="문제 소개"></a>문제 소개</h1><p>이번에 풀어볼 <a href="https://programmers.co.kr/learn/courses/30/lessons/12931" rel="external nofollow noopener noreferrer" target="_blank">문제</a>는 각 자릿수를 더하면 끝인 쉬운 문제입니다.</p><p><img src="problem.png" alt="problem"></p><hr><h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><p>간단합니다.<br><code>String</code>으로 바꿔준 후 <code>map</code>을 거쳐서 아스키코드를 이용해서 수로 바꿔주고 <code>sum()</code></p><p>여기서 48을 빼준 이유는 48이 <code>&#39;0&#39;.toInt()</code>의 결과, 즉 0의 아스키코드이기 때문인데요.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'N'</span>.toInt() - <span class="string">'0'</span>.toInt()</span><br></pre></td></tr></table></figure><p>를 하면 문자 N에서 숫자N(0~9)이 나온다는 것을 이용했습니다.</p><hr><h1 id="정답-코드"><a href="#정답-코드" class="headerlink" title="정답 코드"></a>정답 코드</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(n: <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span> =</span><br><span class="line">        n.toString().map &#123; it.toInt() - <span class="number">48</span> &#125;.sum()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>출처: 프로그래머스 코딩 테스트 연습, <a href="https://programmers.co.kr/learn/challenges" rel="external nofollow noopener noreferrer" target="_blank">https://programmers.co.kr/learn/challenges</a></p></blockquote>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/03/13/add-digits/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Level 1] 프로그래머스 이상한 문자 만들기 코틀린 풀이</title>
      <link>http://kinetic27.github.io/2020/03/13/make-strange-string/</link>
      <guid>http://kinetic27.github.io/2020/03/13/make-strange-string/</guid>
      <pubDate>Fri, 13 Mar 2020 09:58:07 GMT</pubDate>
      <description>
      
        &lt;p&gt;[Level 1] 프로그래머스 이상한 문자 만들기 코틀린 풀이&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>[Level 1] 프로그래머스 이상한 문자 만들기 코틀린 풀이</p><a id="more"></a><hr><h1 id="문제-소개"><a href="#문제-소개" class="headerlink" title="문제 소개"></a>문제 소개</h1><p>이번에 풀어볼 <a href="https://programmers.co.kr/learn/courses/30/lessons/12930" rel="external nofollow noopener noreferrer" target="_blank">문제</a>는 단어단위로 <code>짝/홀</code>에 따라서 대소문자를 적용하면 되는 문제입니다.</p><p><img src="problem.png" alt="problem"></p><hr><h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><p>우선 <code>split</code>을 이용하여 단어단위로 끊어준뒤 어짜피 다시 합쳐야하니<br><code>joinToString { }</code> transform 기능을 이용합시다.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s.split(<span class="string">" "</span>).joinToString(<span class="string">" "</span>) &#123;</span><br><span class="line">    <span class="comment">// 여기서 it으로 받아서 변형</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>그리고 이제 글자단위로 바꿔주면 되는데 한번 더 쪼개야겠죠?</p><p>짝수 홀수를 구별하기 위해서 <code>mapIndexed</code>를 사용합니다.</p><p>받아서 짝수면 <code>toUpperCase()</code> 홀수면 <code>c.toLowerCase()</code> 처리를 하고<br>다시 단어로 합쳐줍니다!!</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">it.mapIndexed &#123; i, c -&gt;</span><br><span class="line">    <span class="keyword">when</span> (i % <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="number">0</span> -&gt; c.toUpperCase()</span><br><span class="line">        <span class="keyword">else</span> -&gt; c.toLowerCase()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;.joinToString(<span class="string">""</span>)</span><br></pre></td></tr></table></figure><p>합치면 끝!</p><hr><h1 id="정답-코드"><a href="#정답-코드" class="headerlink" title="정답 코드"></a>정답 코드</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(s: <span class="type">String</span>)</span></span>: String =</span><br><span class="line">        s.split(<span class="string">" "</span>).joinToString(<span class="string">" "</span>) &#123;</span><br><span class="line">            it.mapIndexed &#123; i, c -&gt;</span><br><span class="line">                <span class="keyword">when</span> (i % <span class="number">2</span>) &#123;</span><br><span class="line">                    <span class="number">0</span> -&gt; c.toUpperCase()</span><br><span class="line">                    <span class="keyword">else</span> -&gt; c.toLowerCase()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;.joinToString(<span class="string">""</span>)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>2중 for문 쓴거같은 느낌이지만 실행시간 제약 없으니 넘어가죠…</p><blockquote><p>출처: 프로그래머스 코딩 테스트 연습, <a href="https://programmers.co.kr/learn/challenges" rel="external nofollow noopener noreferrer" target="_blank">https://programmers.co.kr/learn/challenges</a></p></blockquote>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/03/13/make-strange-string/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Level 1] 프로그래머스 약수의 합 코틀린 풀이</title>
      <link>http://kinetic27.github.io/2020/03/13/sum-of-factors/</link>
      <guid>http://kinetic27.github.io/2020/03/13/sum-of-factors/</guid>
      <pubDate>Fri, 13 Mar 2020 09:34:22 GMT</pubDate>
      <description>
      
        &lt;p&gt;프로그래머스 약수의 합 코틀린 풀이&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>프로그래머스 약수의 합 코틀린 풀이</p><a id="more"></a><hr><h1 id="문제-소개"><a href="#문제-소개" class="headerlink" title="문제 소개"></a>문제 소개</h1><p>이번에 풀어볼 <a href="https://programmers.co.kr/learn/courses/30/lessons/12928" rel="external nofollow noopener noreferrer" target="_blank">문제</a>는 약수의 합 구하기입니다!!</p><p><img src="problem.png" alt="problem"></p><hr><h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><p>가비지는 무시하고 풀면 매우 간단히 풀 수 있습니다.</p><ol><li>약수의 최대치는 <code>n / 2</code>니까 <code>1 ~ n/2</code>의 <code>range</code>를 생성</li><li><code>range</code>를 <code>% 0</code>으로 약수인지 체크하고 필터링</li><li><code>sum()</code>으로 더하기</li></ol><p>바로 코드로 씁니다!</p><hr><h1 id="정답-코드"><a href="#정답-코드" class="headerlink" title="정답 코드"></a>정답 코드</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(n: <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span> =</span><br><span class="line">        (<span class="number">1</span>..n / <span class="number">2</span>).filter &#123; n % it == <span class="number">0</span> &#125;.sum()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>너무 쉬워서 별다른 글이 필요없네요!</p><blockquote><p>출처: 프로그래머스 코딩 테스트 연습, <a href="https://programmers.co.kr/learn/challenges" rel="external nofollow noopener noreferrer" target="_blank">https://programmers.co.kr/learn/challenges</a></p></blockquote>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/03/13/sum-of-factors/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Level 1] 프로그래머스 시저 암호 코틀린 풀이</title>
      <link>http://kinetic27.github.io/2020/03/13/caesar-cipher/</link>
      <guid>http://kinetic27.github.io/2020/03/13/caesar-cipher/</guid>
      <pubDate>Fri, 13 Mar 2020 09:04:35 GMT</pubDate>
      <description>
      
        &lt;p&gt;프로그래머스 시저 암호 코틀린 풀이&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>프로그래머스 시저 암호 코틀린 풀이</p><a id="more"></a><hr><h1 id="문제-소개"><a href="#문제-소개" class="headerlink" title="문제 소개"></a>문제 소개</h1><p>이번에 풀어볼 <a href="https://programmers.co.kr/learn/courses/30/lessons/12926" rel="external nofollow noopener noreferrer" target="_blank">문제</a>는 카이사르 암호, 시저 암호로 불리는 암호에 관련된 문제이다.</p><p><img src="problem.png" alt="problem"></p><hr><h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><h2 id="문자열-분기치기"><a href="#문자열-분기치기" class="headerlink" title="문자열 분기치기"></a>문자열 분기치기</h2><p>우선 이번에는 문자단위로 컨트롤해야하니 3가지의 경우로 각각 나누어서 when을 사용했습니다.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s.map &#123;</span><br><span class="line">    <span class="keyword">when</span> (it) &#123;</span><br><span class="line">        <span class="keyword">in</span> <span class="string">'A'</span>..<span class="string">'Z'</span> -&gt; it.caesar(n, <span class="string">'A'</span>, <span class="string">'Z'</span>)</span><br><span class="line">        <span class="keyword">in</span> <span class="string">'a'</span>..<span class="string">'z'</span> -&gt; it.caesar(n, <span class="string">'a'</span>, <span class="string">'z'</span>)</span><br><span class="line">        <span class="keyword">else</span> -&gt; it</span><br><span class="line">    &#125;</span><br><span class="line">&#125;.joinToString(<span class="string">""</span>)</span><br></pre></td></tr></table></figure><p>이렇게 짜면 문자열이 대문자인지, 소문자인지, 그 외인지를 판단해서 확장함수를 사용해서 넘겨서 시프트 처리를 하도록 했습니다.</p><h2 id="확장함수의-구현"><a href="#확장함수의-구현" class="headerlink" title="확장함수의 구현"></a>확장함수의 구현</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="built_in">Char</span>.<span class="title">caesar</span><span class="params">(c: <span class="type">Int</span>, n: <span class="type">Char</span>, m: <span class="type">Char</span>)</span></span>: <span class="built_in">Char</span> =</span><br><span class="line">    (n.toInt() + (toInt() - n.toInt() + c) % (m - n + <span class="number">1</span>)).toChar()</span><br></pre></td></tr></table></figure><p>구현은 카이사르 암호의 법칙만 알고있다면 구현은 간단합니다.</p><p><code>C</code>라면 <code>A</code>로 부터 2를 더하면 되는것을 이용해서</p><p>입력받은 <code>Char</code>애서 시작문자(<code>n</code>)를 빼고 얼만큼 밀지 구해두고 % 를 이용해서 <code>Z</code> 에서 4칸을 밀면 <code>D</code>로 넘어가도록 나머지 연산을 이용합니다!</p><p>두개를 합치면 끝이에요!!</p><hr><h1 id="정답-코드"><a href="#정답-코드" class="headerlink" title="정답 코드"></a>정답 코드</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(s: <span class="type">String</span>, n: <span class="type">Int</span>)</span></span>: String =</span><br><span class="line">        s.map &#123;</span><br><span class="line">            <span class="keyword">when</span> (it) &#123;</span><br><span class="line">                <span class="keyword">in</span> <span class="string">'A'</span>..<span class="string">'Z'</span> -&gt; it.caesar(n, <span class="string">'A'</span>, <span class="string">'Z'</span>)</span><br><span class="line">                <span class="keyword">in</span> <span class="string">'a'</span>..<span class="string">'z'</span> -&gt; it.caesar(n, <span class="string">'a'</span>, <span class="string">'z'</span>)</span><br><span class="line">                <span class="keyword">else</span> -&gt; it</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.joinToString(<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="built_in">Char</span>.<span class="title">caesar</span><span class="params">(c: <span class="type">Int</span>, n: <span class="type">Char</span>, m: <span class="type">Char</span>)</span></span>: <span class="built_in">Char</span> =</span><br><span class="line">        (n.toInt() + (toInt() - n.toInt() + c) % (m - n + <span class="number">1</span>)).toChar()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>시저암호! 흥미로운 문제였습니다!</p><blockquote><p>출처: 프로그래머스 코딩 테스트 연습, <a href="https://programmers.co.kr/learn/challenges" rel="external nofollow noopener noreferrer" target="_blank">https://programmers.co.kr/learn/challenges</a></p></blockquote>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/03/13/caesar-cipher/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Level 1] 프로그래머스 문자열을 정수로 바꾸기 코틀린 풀이</title>
      <link>http://kinetic27.github.io/2020/03/13/string-to-int/</link>
      <guid>http://kinetic27.github.io/2020/03/13/string-to-int/</guid>
      <pubDate>Fri, 13 Mar 2020 08:03:10 GMT</pubDate>
      <description>
      
        &lt;p&gt;프로그래머스 문자열을 정수로 바꾸기 코틀린 풀이&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>프로그래머스 문자열을 정수로 바꾸기 코틀린 풀이</p><a id="more"></a><hr><h1 id="문제-소개"><a href="#문제-소개" class="headerlink" title="문제 소개"></a>문제 소개</h1><p>이번 <a href="https://programmers.co.kr/learn/courses/30/lessons/12925" rel="external nofollow noopener noreferrer" target="_blank">문제</a>는 문자열을 조건에 맞게 숫자로 바꾸면 되는 쉬운 문제이다!</p><p><img src="problem.png" alt="problem"></p><hr><h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><p>이번 문제의 경우의 수는 크게 3가지가 있는데</p><ol><li>+숫자</li><li>숫자</li><li>-숫자</li></ol><p>여기서 <code>+</code>만 제거해버리면 <code>1, 2</code>번을 하나로 묶어서 처리할 수 있습니다</p><p>if문을 써도 되지만 저는 엘비스 연산자 <code>?:</code>를 이용하여 문제를 풀어봤습니다.</p><p>먼저 <code>replace</code>로 <code>+</code>를 제거한 뒤 <code>toIntOrNull</code>을 사용하여 3번의 경우에는 null을 반환하게 해줍니다.</p><p>이때 엘비스 연산자 <code>?:</code>이 <code>null</code>일시에는 <code>-</code>를 제거하고 0에서 빼서 음수로 만들어줘서 처리합니다!</p><hr><h1 id="정답-코드"><a href="#정답-코드" class="headerlink" title="정답 코드"></a>정답 코드</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(s: <span class="type">String</span>)</span></span>: <span class="built_in">Int</span> =</span><br><span class="line">        s.replace(<span class="string">"+"</span>, <span class="string">""</span>).toIntOrNull() ?:</span><br><span class="line">            <span class="number">0</span> - s.substring(<span class="number">1</span>).toInt()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><code>엘비스 연산자</code>와 <code>OrNull</code>의 조합 정말로 유용합니다!</p><blockquote><p>출처: 프로그래머스 코딩 테스트 연습, <a href="https://programmers.co.kr/learn/challenges" rel="external nofollow noopener noreferrer" target="_blank">https://programmers.co.kr/learn/challenges</a></p></blockquote>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/03/13/string-to-int/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Github Page와 Hexo로 블로그 만들고 테마 적용하기 + 검색엔진 최적화(SEO)</title>
      <link>http://kinetic27.github.io/2020/03/06/build-blog-with-hexo-github/</link>
      <guid>http://kinetic27.github.io/2020/03/06/build-blog-with-hexo-github/</guid>
      <pubDate>Fri, 06 Mar 2020 14:12:10 GMT</pubDate>
      <description>
      
        &lt;p&gt;Github Page와 Hexo로 1시간만에 블로그 만들기 + 테마 설치  &lt;/p&gt;
&lt;p&gt;깃헙 설치, 플러그인 설치, 검색엔진 최적화, rss 까지!&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>Github Page와 Hexo로 1시간만에 블로그 만들기 + 테마 설치  </p><p>깃헙 설치, 플러그인 설치, 검색엔진 최적화, rss 까지!</p><a id="more"></a><hr><h1 id="간략한-소개"><a href="#간략한-소개" class="headerlink" title="간략한 소개"></a>간략한 소개</h1><p>이번 포스팅에서는 <code>GitPage</code>와 <code>Hexo</code> 프레임워크를 이용해서 개인 블로그를 손쉽게 만드는 방법을 소개해드리려고합니다!</p><p><img src="thumbnail.png" alt="엄청난 느낌이 드는 썸네일"></p><ul><li>Github Page: <a href="https://pages.github.com/" rel="external nofollow noopener noreferrer" target="_blank">https://pages.github.com/</a></li><li>Hexo: <a href="https://hexo.io/" rel="external nofollow noopener noreferrer" target="_blank">https://hexo.io/</a></li></ul><p>지금 읽고계신 저의 블로그도 <code>GitPage</code>와 <code>Hexo</code> 그리고 <code>Icarus</code> 테마로 만들어졌는데요</p><p><code>GitPage</code>는 정적 페이지를 <code>username.github.io</code>로 쉽게 호스팅하도록 도와줍니다!</p><p><code>Hexo</code>는 정적 페이지를 쉽게 만들 수 있도록 도와주는 블로그 프레임워크입니다!  </p><p>hexo의 장점으로는</p><ul><li><code>npm</code>(node package manager)를 통해 간단히 설치 가능</li><li><code>Node.js</code>기반으로 매우 빠른 생성 속도를 제공합니다.</li><li>다양한 플러그인을 지원</li><li><code>Markdown</code>의 모든 기능을 지원<br>등이 있겠네요</li></ul><p>그럼 차근차근 한단계씩 만들어봅시다!</p><hr><h1 id="GitHub-사용하기"><a href="#GitHub-사용하기" class="headerlink" title="GitHub 사용하기"></a>GitHub 사용하기</h1><h2 id="가입-및-정적-페이지-호스팅"><a href="#가입-및-정적-페이지-호스팅" class="headerlink" title="가입 및 정적 페이지 호스팅"></a>가입 및 정적 페이지 호스팅</h2><p><code>Gitpage</code>를 사용하기 위해서는 우선 Github에 가입이 되어있어야합니다!</p><p><img src="02-github-signup.png" alt="깃허브 회원가입 화면"></p><p><a href="https://github.com/join" rel="external nofollow noopener noreferrer" target="_blank">깃허브</a>로 들어가셔서 가입 버튼을 누른후 회원가입을 우선 진행해줍니다!</p><p><img src="03-new-button.png" alt="new 버튼 위치"></p><p>그 다음 새로운 <code>repository</code>를 만들어주기 위해서 <code>new</code> 버튼을 누릅니다!</p><p>누르면 새로운 레포를 생성하는 창이 뜨는데요.</p><p><img src="04-new-repository.png" alt="새로운 레포 생성"></p><p><code>Repository name</code>에는 <code>깃헙아이디.github.io</code>를 입력해주시고</p><p>기본값인 Public으로 두고 <code>Create repository</code>를 눌러서 레포를 생성해줍니다!</p><p>여기까지 하셨다면 절반은 성공했습니다!</p><hr><h2 id="정적-페이지-테스트"><a href="#정적-페이지-테스트" class="headerlink" title="정적 페이지 테스트"></a>정적 페이지 테스트</h2><p>이번엔 아까 설치한 Gitpage의 기능을 테스트해보면서 <code>Git</code>을 설치하고 이용해볼건데요.  </p><p>이미 나는 <code>Git</code>을 사용중이다, 사용방법을 알고있다 하시는 분들은 넘어가셔도 좋습니다!</p><h3 id="Git-설치"><a href="#Git-설치" class="headerlink" title="Git 설치"></a>Git 설치</h3><p>저희는 <code>Github</code>를 이용하기 위해서 <code>Git</code>을 설치하고 이어서 진행할겁니다.</p><p><a href="https://git-scm.com/downloads" rel="external nofollow noopener noreferrer" target="_blank">Git 설치</a></p><p>여기서 받으시고 <code>next</code>를 눌러 기본 옵션으로 설치해줍니다!</p><blockquote><p>곧 Git 설치법 글로 자세히 설명하겠습니다</p></blockquote><h3 id="CMD로-폴더-선택"><a href="#CMD로-폴더-선택" class="headerlink" title="CMD로 폴더 선택"></a>CMD로 폴더 선택</h3><p>먼저 테스트를 위해서 새로운 빈 폴더를 하나 만들어줍시다!</p><p><img src="05-new-folder.png" alt="새 폴더"></p><p>저는 <code>test</code>라고 이름을 지었고 제 폴더 경로는 <code>E:\Project\GitPage\test</code>입니다!</p><p>이번엔 CMD(명령 프롬프트)를 열건데요</p><p><code>윈도우키 + R</code>을 한 후 <code>cmd</code>라고 입력하시면 검은 창이 뜰겁니다!</p><p><img src="06-execution_cmd.png" alt="cmd 열기"><br><img src="07-cmd-move.png" alt="cmd 화면"></p><p>여기 보시면 저는 지금    <code>C:\Users\ghdtj</code> 폴더가 선택되어있습니다.<br>하지만 저흰 아까 만든 프로젝트로 이동해야합니다!</p><p><img src="08-cmd-select-folder.png" alt="폴더 선택 완료"></p><p>먼저 드라이브가 바뀌니 <code>E:</code>를 입력해줍니다!</p><p>그 다음 <code>cd 아까 경로</code>를 입력해줄건데요.<br>저같은 경우는 <code>cd E:\Project\GitPage\test</code>가 되겠네요!</p><h3 id="정적-페이지를-호스팅해보자"><a href="#정적-페이지를-호스팅해보자" class="headerlink" title="정적 페이지를 호스팅해보자"></a>정적 페이지를 호스팅해보자</h3><p>현재 <code>github</code>에 올라가있는 초기 셋팅을 <code>내 컴퓨터(로컬)</code>로 옮겨봅시다!</p><h4 id="Clone-the-repository"><a href="#Clone-the-repository" class="headerlink" title="Clone the repository"></a>Clone the repository</h4><p>아까 열고 이동한 cmd에 아래의 커맨드를 입력합시다.</p><div style="callout:danger">꼭 username 자리에 본인의 깃허브 아이디 입력!</div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/username/username.github.io</span><br></pre></td></tr></table></figure><h4 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h4><p>그 다음 이 두줄을 순서대로 입력합시다.<br>cd로 해당 폴더로 이동, 그 아래 커맨드로 테스트를 위한 <code>index.html</code> 파일을 만들어줍니다!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> username.github.io</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"Hello World"</span> &gt; index.html</span><br></pre></td></tr></table></figure><div style="callout:danger">여기도 꼭 username 자리에 본인의 깃허브 아이디 입력!</div><h4 id="Push-it"><a href="#Push-it" class="headerlink" title="Push it!"></a>Push it!</h4><p>마지막으로 다시 깃헙으로 프로젝트를 넘겨줄 차례입니다!<br>마찬가지로 차례대로 진행해주세요!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git add --all</span><br><span class="line"></span><br><span class="line">$ git commit -m <span class="string">"Initial commit"</span></span><br><span class="line"></span><br><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure><h4 id="…and-you’re-done"><a href="#…and-you’re-done" class="headerlink" title="…and you’re done!"></a>…and you’re done!</h4><p>브라우저를 열고 <code>https://&lt;자기아이디&gt;.github.io</code>로 들어가보세요!<br>Hello World가 써있는 페이지가 뜨면 성공입니다!</p><hr><h1 id="Hexo-설치"><a href="#Hexo-설치" class="headerlink" title="Hexo 설치"></a>Hexo 설치</h1><p>이제 저희는 <code>Hexo</code>를 설치해볼겁니다!<br>아까 말씀드렸듯이 <code>Hexo</code>는 <code>Node.js</code>기반이라 npm을 통해서 간편하게 설치할 수 있습니다!</p><h2 id="node-js-설치"><a href="#node-js-설치" class="headerlink" title="node.js 설치"></a>node.js 설치</h2><p>이미 Node.js가 설치되어있어 npm 사용이 가능하신분들은 넘어가셔도 좋습니다!</p><p><a href="https://nodejs.org/en/" rel="external nofollow noopener noreferrer" target="_blank">https://nodejs.org/en/</a>으로 들어가서 노드 LTS버전을 설치해줍니다!</p><p>여기도 마찬가지로 따로 건들 항목은 없고 <code>next</code>만 눌러주시면 설치가 간편히 끝납니다!</p><h2 id="Hexo-클라이언트-설치"><a href="#Hexo-클라이언트-설치" class="headerlink" title="Hexo 클라이언트 설치"></a>Hexo 클라이언트 설치</h2><p>Hexo를 사용하기 위해서는 우선 npm에서 hexo 클라이언트를 받아와야합니다!</p><p>CMD를 열고</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>라고 입력해주면 됩니다!   </p><h2 id="hexo-블로그-폴더-생성"><a href="#hexo-블로그-폴더-생성" class="headerlink" title="hexo 블로그 폴더 생성"></a>hexo 블로그 폴더 생성</h2><p>이번에는</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>를 입력해서 blog라는 이름의 hexo폴더를 만든 후,<br>폴더를 선택하고 npm을 설치합시다!</p><p><img src="09-hexo-init.png" alt="설치 (클릭시 확대됨)"></p><p>이렇게 되면 성공입니다!</p><h2 id="블로그-기본-정보-수정"><a href="#블로그-기본-정보-수정" class="headerlink" title="블로그 기본 정보 수정"></a>블로그 기본 정보 수정</h2><p>방금 생성한 blog폴더를 열어보시면 <code>_config.yml</code>라는 파일이 생겨납니다!</p><div style="callout:info">    https://hexo.io/docs/ 에서 다양한 옵션을 볼 수 있습니다!</div><p>파일을 열어서 내용을 수정해봅시다!</p><h3 id="site-기본-정보-수정"><a href="#site-기본-정보-수정" class="headerlink" title="site 기본 정보 수정"></a>site 기본 정보 수정</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Hexo</span><br><span class="line">subtitle: &#39;&#39;</span><br><span class="line">description: &#39;&#39;</span><br><span class="line">keywords:</span><br><span class="line">author: John Doe</span><br><span class="line">language: en</span><br><span class="line">timezone: &#39;&#39;</span><br></pre></td></tr></table></figure><p>를 찾아서 원하시는대로 수정해주시면 됩니다!</p><p>저같은 경우는</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Kinetic&#39;s BLOG</span><br><span class="line">subtitle: &#39;키네틱의 블로그&#39;</span><br><span class="line">description: &#39;키네틱의 블로그입니다&#39;</span><br><span class="line">keywords: programming, aheui, kotlin, android</span><br><span class="line">email: ghdtjrwls27@gmail.com</span><br><span class="line">author: Kinetic27</span><br><span class="line">language: ko</span><br><span class="line">timezone: &#39;Asia&#x2F;Seoul&#39;</span><br></pre></td></tr></table></figure><p>으로 수정했네요!</p><h3 id="URL-정보-수정"><a href="#URL-정보-수정" class="headerlink" title="URL 정보 수정"></a>URL 정보 수정</h3><p>바로 아래에서 url 셋팅을 찾아서주세요!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">url: http:&#x2F;&#x2F;yoursite.com</span><br><span class="line">root: &#x2F;</span><br><span class="line">permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true</span><br><span class="line">  trailing_html: true</span><br></pre></td></tr></table></figure><p>라고 되어있는데요, 여기서 url에 자신의 깃허브 유저명을 넣어서 <code>http://username.github.io</code>을 넣어주시면 됩니다!</p><p>저는 이렇게 수정해봤습니다!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">url: http:&#x2F;&#x2F;kinetic27.github.io</span><br><span class="line">root: &#x2F;</span><br><span class="line">permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true</span><br><span class="line">  trailing_html: true</span><br></pre></td></tr></table></figure><h3 id="Deploy-설정"><a href="#Deploy-설정" class="headerlink" title="Deploy 설정"></a>Deploy 설정</h3><p>쭉 내리시면</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: &#39;&#39;</span><br></pre></td></tr></table></figure><p>가 보일텐데요!</p><p>저희는 이 항목을 자신의 Gitpage Repository 정보를 넣어서 수정할겁니다!</p><p>여기도 username 바꿔주세요!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;username&#x2F;username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h2 id="hexo-테스트"><a href="#hexo-테스트" class="headerlink" title="hexo 테스트"></a>hexo 테스트</h2><p>여기까지 오셨다면 기본적인 설정이 완료된겁니다! 🎉🎉</p><p>이제 프로젝트 폴더로 이동해둔 CMD를 다시 열고,<br>아래의 커맨드를 입력하면 로컬에서 테스트가 가능합니다!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><div style="callout:info">hexo server는 줄여서 hexo s로도 사용가능합니다!</div><p>서버가 열렸다는 문구가 명령창에 뜨면 웹 브라우저를 열고 <a href="http://localhost:4000" rel="external nofollow noopener noreferrer" target="_blank">http://localhost:4000</a>로 들어가서 블로그를 볼 수 있습니다!</p><p><img src="10-first-hexo-blog.png" alt="헥소 블로그"></p><hr><h1 id="Github에-배포하기"><a href="#Github에-배포하기" class="headerlink" title="Github에 배포하기"></a>Github에 배포하기</h1><p>이제 방금까지 만든 헥소 블로그를 깃허브로 배포해봅시다!</p><p>로컬에서 열면 자기 컴퓨터에서만 보이니까요!</p><p>아까 CMD창을 다시 열어줍니다.<br>혹시 닫으셨다면 다시 CD명령어로 blog폴더까지 들어가주시고요.</p><p>아래의 두 명령어를 입력해서 <code>생성</code>, <code>배포</code>를 해주세요</p><h2 id="Hexo를-이용해-정적-웹-리소스-생성하기"><a href="#Hexo를-이용해-정적-웹-리소스-생성하기" class="headerlink" title="Hexo를 이용해 정적 웹 리소스 생성하기"></a>Hexo를 이용해 정적 웹 리소스 생성하기</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><blockquote><p>줄여서 hexo g로도 사용가능합니다!</p></blockquote><h2 id="github에-배포하기"><a href="#github에-배포하기" class="headerlink" title="github에 배포하기"></a>github에 배포하기</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><blockquote><p>줄여서 hexo d로도 사용가능합니다!</p></blockquote><div style="callout:info">이 두가지를 합쳐서  <br>hexo generate -deploy  혹은 hexo g -d로 사용가능합니다!!</div><p>혹시 배포시에</p><blockquote><p><code>ERROR Deployer not found: git</code></p></blockquote><p>라는 에러가 뜬다면</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>를 통해서 플러그인을 설치해주세요!</p><p>여기까지 하셨다면 다시 <a href="https://username.github.io" rel="external nofollow noopener noreferrer" target="_blank">https://username.github.io</a>로 들어가보시면 hexo페이지가 보일겁니다!! 🎉🎉🎉</p><hr><h1 id="테마-설치법"><a href="#테마-설치법" class="headerlink" title="테마 설치법"></a>테마 설치법</h1><p>hexo에는 사용자가 다운받아서 적용할 수 있는 <a href="https://hexo.io/themes/index.html" rel="external nofollow noopener noreferrer" target="_blank">수많은 테마</a>들이 존재합니다!</p><p><a href="https://hexo.io/themes/index.html" rel="external nofollow noopener noreferrer" target="_blank">링크</a>를 타고 들어가셔서 테마를 고른다음<br>해당하는 테마의 <code>이름</code> 부분을 누르시면 해당 테마가 올라가져있는 github이 열리는데요!</p><div style="callout:info">디자인, 반응형, 영문메뉴얼유무를 잘 따져보도록합시다!</div><p><img src="11-hexo-theme.png" alt="테마 깃헙 예시"></p><p>각 테마가 시키는대로 설치하면 됩니다!  </p><p>공통점은</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> [테마에 링크 써있는거.git] themes/테마이름</span><br></pre></td></tr></table></figure><p>방식으로 clone해서 설치하고<br><code>_config.yml</code>에 들어가서 <code>theme: 테마이름</code>으로 수정해줘야합니다!</p><p>그다음 <code>hexo g</code> 명령어를 사용하면 테마 폴더 안에  <code>_config.yml</code>가 하나 더 생길텐데 이것으로 테마의 제목, 내용 등을 수정할 수 있습니다!</p><p>고치고 <code>hexo g</code>, <code>hexo s</code>를 통해서 반영되었는지 확인해봅시다!</p><p>참고로 제가 쓰고있는 테마는 Icarus라는 테마입니다!</p><ul><li>Icarus: <a href="https://github.com/ppoffice/hexo-theme-icarus.git" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/ppoffice/hexo-theme-icarus.git</a></li></ul><h2 id="앗-작동이-안됩니다"><a href="#앗-작동이-안됩니다" class="headerlink" title="앗 작동이 안됩니다!"></a>앗 작동이 안됩니다!</h2><p>실행시</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR: pakage [이름] is not installed.</span><br></pre></td></tr></table></figure><p>에러가 뜨는 경우가 있습니다.</p><p>icarus 테마 설치시에는 cheerio 에러가 뜨는데요.<br>이럴때는</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install [이름] --save</span><br></pre></td></tr></table></figure><p>명령어를 통해서 없는 패키지를 모조리 설치합시다!</p><h2 id="테마를-바꿨는데-적용이-안됩니다"><a href="#테마를-바꿨는데-적용이-안됩니다" class="headerlink" title="테마를 바꿨는데 적용이 안됩니다!"></a>테마를 바꿨는데 적용이 안됩니다!</h2><p>그럴때는</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>을 사용해서 초기화를 해준 후 다시</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>를 해줍시다!</p><h2 id="블로그-홈의-로고등-이미지-변경"><a href="#블로그-홈의-로고등-이미지-변경" class="headerlink" title="블로그 홈의 로고등 이미지 변경"></a>블로그 홈의 로고등 이미지 변경</h2><p>이미지 변경법은 간단합니다.<br>해당 테마 폴더의 <code>source/images</code>에 이미지를 넣어주고</p><p><code>logo: /images/logo.svg</code>와 같이 기존의 이미지를 대체하도록 수정하면됩니다.</p><h2 id="꿀팁-submodule사용해서-테마-관리"><a href="#꿀팁-submodule사용해서-테마-관리" class="headerlink" title="꿀팁, submodule사용해서 테마 관리"></a>꿀팁, submodule사용해서 테마 관리</h2><p>테마를 다른 github 레포에서 관리하는 방법이 있습니다!<br>내 저장소의 특정 subdirectory에 다른 Git저장소를 연결해서 사용하는 방식인데요.<br>쉽게 생각하면 레포안에 레포를 import한 느낌입니다.</p><p>방법은 간단합니다. 위에서 소개한 방법을 이용하는 대신 명령어가 바뀝니다</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> [테마에 링크 써있는거.git] themes/테마이름</span><br></pre></td></tr></table></figure><p>대신에</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git submodule add [테마에 링크 써있는거.git] themes/테마이름</span><br></pre></td></tr></table></figure><p>를 해줍니다!</p><p>그다음 똑같이 <code>_config.yml</code>의 <code>theme:</code>를 수정한 후 <code>hexo g</code>로 생성해줍니다!</p><p>나중에 다른 환경에 자신이 만든 저장소를 클론해야 할 일이 생길 텐데 단순히 클론만 받으면 하위 경로에 있는 submodule까지 클론이 되지 않습니다!</p><p>이럴때는 이 명령어로 해결합니다!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git submodule update --init --recursive</span><br></pre></td></tr></table></figure><h2 id="꿀팁-README-md-넣기"><a href="#꿀팁-README-md-넣기" class="headerlink" title="꿀팁, README.md 넣기"></a>꿀팁, README.md 넣기</h2><p>헥소에서 리드미를 넣어주려고 <code>source_dir</code>에 파일을 넣어줬더니 <code>hexo g</code>를 하면 <code>public_dir</code>에 <code>README.html</code>로 변환되어서 들어간다…</p><p>해결방법은 간단합니다!</p><p><img src="19-readme.png" alt="여기에 추가"></p><p>요렇게 <code>skip_render</code> 속성을 주시면 됩니다!</p><p>폴더 단위로도 사용이 가능하니 참고하세요!</p><h2 id="Icarus테마-꿀팁"><a href="#Icarus테마-꿀팁" class="headerlink" title="Icarus테마 꿀팁"></a>Icarus테마 꿀팁</h2><h3 id="About-페이지"><a href="#About-페이지" class="headerlink" title="About 페이지"></a>About 페이지</h3><p>테마 설치하고 돌렸는데 <code>Cannot GET /about/</code>이라면서 about 페이지만 안떠서 불편하셨죠?</p><p>이럴떄는 프로젝트의 <code>source</code>에 <code>about</code> 폴더를 만들고 그 안에 <code>index.md</code>를 추가해보세요!</p><p>간단하게</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: about</span><br><span class="line">title: About Kinetic</span><br><span class="line">date: 2019-12-27 03:56</span><br><span class="line">widgets:</span><br><span class="line">  -</span><br><span class="line"><span class="code">    type: recent_posts</span></span><br><span class="line"><span class="code">    position: right</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">## Intro.</span></span><br><span class="line">안녕하세요.</span><br></pre></td></tr></table></figure><p>요런식으로 적고 <code>hexo g</code>, <code>hexo s</code>해서 보면 에러가 사라지고 보일겁니다!</p><p>포트폴리오 적기에 안성맞춤이네요!</p><hr><h3 id="OG-image-설정법"><a href="#OG-image-설정법" class="headerlink" title="OG image 설정법"></a>OG image 설정법</h3><p>OG이미지란 링크를 보내면 읽어서 띄워주는 미리보기 같은건데요.</p><p><img src="15-og-image.png" alt="og이미지"></p><p>이를 설정하기 위해서는 크게 두가지 방법이 있습니다.</p><ol><li><p><code>source</code> 폴더 안에 <code>images</code> 폴더를 만들고 <code>og_images.png</code>라는 이름으로 넣어줍니다.</p></li><li><p><code>hexo</code>의 <code>_config.yml</code>에 가서 <code>article:</code> 하위에 <code>og_image: &quot;이미지경로&quot;</code>의 형태로 추가한다.</p></li></ol><p><img src="16-og-article.png" alt="이렇게요"></p><p>두가지 방법 모두 <code>post.js</code>안에 이렇게 정의되어있어서 혹시나하고 해봤더니</p><p><img src="17-og-set.png" alt="post.js에서 확인"></p><p>모두 html head에 잘 반영되는것을 볼 수 있다.</p><h2 id><a href="#" class="headerlink" title></a><img src="18-og-html.png" alt="og:image"></h2><h1 id="새-글-쓰는법"><a href="#새-글-쓰는법" class="headerlink" title="새 글 쓰는법"></a>새 글 쓰는법</h1><p>관련 포스트는 추후 작성될 예정이지만 간단히 소개해드리면  </p><p>cmd를 열고</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [레이아웃명] [새 포스트명]</span><br></pre></td></tr></table></figure><p>을 입력하면 <code>source/_posts</code> 폴더에 새 md가 생길겁니다!</p><p>레이아웃명은 post가 default라서 생략가능합니다!</p><p>이제 Markdown 형식을 가지고 글을 쓰면 됩니다!</p><p>바로 발행되지 않는 글을 쓰고싶다면 레이아웃명에 <code>draft</code>를 적으면 되겠네요!</p><p>그후 발행시에는</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [포스트명]</span><br></pre></td></tr></table></figure><p>로 draft에서 publish해줍니다!</p><div style="callout:info">마크다운 관련 포스트는 추후 작성될 예정입니다!</div><hr><h1 id="유용한-플러그인-설치"><a href="#유용한-플러그인-설치" class="headerlink" title="유용한 플러그인 설치"></a>유용한 플러그인 설치</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Icarus 테마 3.0 유저는 jsx기반이니 아래의 방법대로 사용이 불가능한 플러그인들이 있습니다</span><br><span class="line">그 경우에는 테마를 https:&#x2F;&#x2F;github.com&#x2F;imaegoo&#x2F;hexo-theme-icarus&#x2F;tree&#x2F;night 로 교체해주세요(Icarus 2.0)</span><br></pre></td></tr></table></figure><h2 id="SEO"><a href="#SEO" class="headerlink" title="SEO"></a>SEO</h2><p>SEO란?:<br>영어로 <code>Search Engine Optimization</code>로 대부분 검색엔진 최적화(SEO)와 관련되어있어요!</p><h2 id="플러그인-설치와-삭제"><a href="#플러그인-설치와-삭제" class="headerlink" title="플러그인 설치와 삭제"></a>플러그인 설치와 삭제</h2><h3 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h3><blockquote><p>npm install <plugin-name> –save</plugin-name></p></blockquote><h3 id="삭제"><a href="#삭제" class="headerlink" title="삭제"></a>삭제</h3><blockquote><p>npm uninstall <plugin-name></plugin-name></p></blockquote><hr><h2 id="hexo-autonofollow"><a href="#hexo-autonofollow" class="headerlink" title="hexo-autonofollow"></a>hexo-autonofollow</h2><p>이 플러그인은 <code>rel=&quot;external nofollow&quot;</code>속성을 자동으로 추가하여 외부 링크 크롤링을 막아준다!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-autonofollow --save</span><br></pre></td></tr></table></figure><p><code>_config.yml</code> 수정</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nofollow:</span><br><span class="line">    enable: true</span><br><span class="line">    exclude:</span><br><span class="line">    - exclude1.com</span><br><span class="line">    - exclude2.com</span><br></pre></td></tr></table></figure><h2 id="hexo-auto-canonical"><a href="#hexo-auto-canonical" class="headerlink" title="hexo-auto-canonical"></a>hexo-auto-canonical</h2><p>이 플러그인은 대표 URL 지정을 돕는다!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-auto-canonical</span><br></pre></td></tr></table></figure><p><code>head.ejs</code> 안에 코드를 넣어야하는데 테마마다 다르니 잘 찾아보자.<br><code>icarus</code> 테마의 경우는 <code>icarus/layout/common/head.ejs</code>에 위치해있다.</p><p>넣을 코드</p><blockquote><p>&lt;%- autoCanonical(config, page) %&gt;</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;generator&quot; content&#x3D;&quot;&lt;%&#x3D; config.title %&gt;&quot;&gt;</span><br><span class="line">    &lt;title&gt;&lt;%&#x3D; title %&gt;&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;author&quot; content&#x3D;&quot;&lt;%&#x3D; config.author %&gt;&quot;&gt;</span><br><span class="line">    &lt;% if (keywords) &#123; %&gt;</span><br><span class="line">        &lt;meta name&#x3D;&quot;keywords&quot; content&#x3D;&quot;&lt;%&#x3D; keywords %&gt;&quot;&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">&lt;%- autoCanonical(config, page) %&gt;    &lt;---- 요 한줄을 추가하면됩니다!</span><br></pre></td></tr></table></figure><h2 id="hexo-generator-seo-friendly-sitemap"><a href="#hexo-generator-seo-friendly-sitemap" class="headerlink" title="hexo-generator-seo-friendly-sitemap"></a>hexo-generator-seo-friendly-sitemap</h2><p>이 플러그인은 더욱 효율적으로 크롤링 할 수 있도록 사이트맵 xml 파일을 자동으로 생생해줍니다!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-seo-friendly-sitemap --save</span><br></pre></td></tr></table></figure><p><code>_config.yml</code>에 아래의 내용을 추가해줍니다!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># sitemap auto generator</span><br><span class="line">sitemap:</span><br><span class="line">    path: sitemap.xml</span><br></pre></td></tr></table></figure><h2 id="hexo-generator-feed-추가"><a href="#hexo-generator-feed-추가" class="headerlink" title="hexo-generator-feed 추가"></a>hexo-generator-feed 추가</h2><p>RSS 피드를 만들어서 일종의 블로그 구독기능을 만들어주는데요!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p><code>_config.yml</code>에 아래의 내용을 추가해줍니다!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># rss feed auto generator</span><br><span class="line">feed:</span><br><span class="line">  type: rss2</span><br><span class="line">  path: rss2.xml</span><br><span class="line">  limit: 20</span><br></pre></td></tr></table></figure><p>3가지 옵션은</p><table><thead><tr><th align="center">옵션</th><th align="center">내용</th></tr></thead><tbody><tr><td align="center">type</td><td align="center">feed의 종류 (atom/rss2) - * 네이버는 atom을 지원하지 않음</td></tr><tr><td align="center">path</td><td align="center">feed가 생성될 경로(default : atom.xml, rss2.xml)</td></tr><tr><td align="center">limit</td><td align="center">최신 포스트 수 설정 (0 또는 false - 전체 포스트)</td></tr></tbody></table><p>입니다!</p><h2 id="hexo-related-popular-posts"><a href="#hexo-related-popular-posts" class="headerlink" title="hexo-related-popular-posts"></a>hexo-related-popular-posts</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-related-popular-posts --save</span><br></pre></td></tr></table></figure><p>으로 설치하고요</p><p><code>article.ejs</code>의 맨밑에 아래 코드를 삽입합니다!<br>&lt;%- popular_posts () %&gt;</p><p><code>_config.yml</code> 밑에 추가해줍니다!</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> # More detailed settings</span><br><span class="line">popularPosts:</span><br><span class="line"></span><br><span class="line">  # (optional) Popular posts options</span><br><span class="line">  googleAnalyticsAPI:</span><br><span class="line">    clientId: ******.apps.googleusercontent.com</span><br><span class="line">    serviceEmail: *****@developer.gserviceaccount.com</span><br><span class="line">    key: &#x2F;hexo-project-root&#x2F;path&#x2F;to&#x2F;google-services.pem</span><br><span class="line">    viewId: 12345678</span><br><span class="line">    dateRange: 30</span><br><span class="line">    expiresDate: 10</span><br><span class="line">    pvMeasurementsStartDate: 2015&#x2F;11&#x2F;01</span><br><span class="line">    rankingSheet: rankingSheet.txt</span><br><span class="line">    # cache:            # (Deprecated) This options is Deprecated &gt; v0.1.3</span><br><span class="line">    #  path: hexo-related-popular-posts-ga-cached.json  # (Deprecated) This options is Deprecated &gt; v0.1.3</span><br><span class="line">    #  expiresDate: 10  # (Deprecated) This options is Deprecated &gt; v0.1.3</span><br><span class="line"></span><br><span class="line">  # (optional) Advanced Related posts options</span><br><span class="line">  morphologicalAnalysis:</span><br><span class="line">    negativeKeywordsList: pluginSettings&#x2F;hexo-rpp-negativewords.txt</span><br><span class="line">    limit: 300</span><br><span class="line"></span><br><span class="line">  # (optional) Related post&#39;s weight options</span><br><span class="line">  weight:</span><br><span class="line">    tagRelevancy: 1.0</span><br><span class="line">    contentsRelevancy: 1.0</span><br><span class="line"></span><br><span class="line">  # (optional) Cache options (Improve generation speed.)</span><br><span class="line">  cache:</span><br><span class="line">    path: cache&#x2F;hexo-popular-related-posts-ga-cached.json</span><br><span class="line"></span><br><span class="line">  # (optional) Log options</span><br><span class="line">  log: true</span><br></pre></td></tr></table></figure><h2 id="hexo-generator-robotstxt"><a href="#hexo-generator-robotstxt" class="headerlink" title="hexo-generator-robotstxt"></a>hexo-generator-robotstxt</h2><p>자동으로 robot.txt 파일을 생성해주는 플러그인 입니다.</p><p>설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-robotstxt --save</span><br></pre></td></tr></table></figure><p><code>_config.yml</code>에 적용!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">robotstxt:</span><br><span class="line">  useragent: &quot;*&quot;</span><br><span class="line">  allow:</span><br><span class="line">    - &#x2F;</span><br><span class="line">  sitemap: https:&#x2F;&#x2F;username.github.io&#x2F;sitemap.xml</span><br></pre></td></tr></table></figure><p>를 추가해줍니다!</p><h2 id="hexo-asset-link"><a href="#hexo-asset-link" class="headerlink" title="hexo-asset-link"></a>hexo-asset-link</h2><p>이 플러그인은 필수템입니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-asset-link --save</span><br></pre></td></tr></table></figure><p>포스트의 <code>md</code>파일이 있는곳에 포스트의 이름과 동일한 폴더를 만들고 이미지를 넣으면</p><p>예를들어 이렇게 될텐데요</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+-- _posts&#x2F;</span><br><span class="line">|   +-- 2019-02-14-Test-Post.md</span><br><span class="line">|   +-- 2019-02-14-Test-Post&#x2F;</span><br><span class="line">|       +-- Test-Image.png</span><br><span class="line">|       +-- Test-Other-File.pdf</span><br></pre></td></tr></table></figure><p>그러면 이제 이미지에 접근할때</p><p><code>![이미지 설명](Test-Image.png)</code></p><p>으로 간단하게 접근이 가능해집니다!</p><p>자세한 설명은 <a href="https://www.npmjs.com/package/hexo-asset-link" rel="external nofollow noopener noreferrer" target="_blank">https://www.npmjs.com/package/hexo-asset-link</a> 에서 확인할 수 있습니다!</p><hr><h1 id="검색엔진에-등록하기"><a href="#검색엔진에-등록하기" class="headerlink" title="검색엔진에 등록하기"></a>검색엔진에 등록하기</h1><h2 id="구글"><a href="#구글" class="headerlink" title="구글"></a>구글</h2><p><a href="https://analytics.google.com/analytics/web/?hl=ko&pli=1" rel="external nofollow noopener noreferrer" target="_blank">구글 애널리틱스(Google Analytics)</a>에 가입을 먼저 해야합니다.</p><p>그 후 사이트 정보를 입력하고 추적 ID를 발급받습니다!</p><p><code>_config.yml</code>에서 <code>plugins</code> 항목에 google-analytics를 추가해줍니다!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plugins:</span><br><span class="line">    google-analytics:</span><br><span class="line">        # Google Analytics tracking id</span><br><span class="line">        tracking_id: UA-*********-1</span><br></pre></td></tr></table></figure><p>그 다음 <a href="https://search.google.com/search-console/welcome" rel="external nofollow noopener noreferrer" target="_blank">Search Console</a>로 들어가서  </p><p>가입 후 <code>속성</code>을 추가해 줘야합니다.</p><p>인증 방법은 두가지로 생성된 html파일을 루트에 올린 후 확인 하는 방법과 애널리틱스 가입을 확인하는 방법으로 인증을 하는데 저는 애널리틱스 인증 방법으로 통과했네요</p><p><img src="12-search.png" alt="Search Console"></p><p>위와 같이 Sitemaps 메뉴에서 아까 플러그인을 통해 생성한 sitemap.xml과 rss2.xml을 추가해 주세요!</p><p>보통 등록후 2~3일동안 데이터 수집 처리 과정이 걸린다고 합니다!</p><h2 id="네이버"><a href="#네이버" class="headerlink" title="네이버"></a>네이버</h2><p><a href="https://searchadvisor.naver.com/console/wmt/board" rel="external nofollow noopener noreferrer" target="_blank">네이버 웹마스터</a>로 들어갑니다!</p><p>그 다음 <code>연동 사이트 목록</code> 페이지에서 <code>내 사이트 추가</code>에 블로그 주소를 추가해 줍니다.</p><p>이때 인증과정이 있는데</p><p><img src="13-auth.png" alt="인증방법"></p><p>저는 두번쨰 방법으로 통과했어요.</p><p>icarus 테마의 경우는 <code>icarus\layout\common\head.ejs</code>에</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot; &#x2F;&gt;</span><br><span class="line">&lt;% if (get_config(&#39;meta_generator&#39;, true)) &#123; %&gt;</span><br><span class="line">&lt;meta name&#x3D;&quot;generator&quot; content&#x3D;&quot;Hexo &lt;%&#x3D; hexo_version() %&gt;&quot; &#x2F;&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1, maximum-scale&#x3D;1&quot; &#x2F;&gt;</span><br><span class="line">&lt;meta name&#x3D;&quot;naver-site-verification&quot; content&#x3D;&quot;4f3c8ad54fee3ab0c7**********************&quot;&#x2F;&gt;</span><br><span class="line">&lt;%- meta() %&gt;</span><br><span class="line">&lt;%- autoCanonical(config, page) %&gt;</span><br><span class="line">&lt;title&gt;&lt;%&#x3D; page_title() %&gt;&lt;&#x2F;title&gt;</span><br></pre></td></tr></table></figure><p>이런식으로 meta가 모여있는곳에 넣어주면 됩니다!</p><p>그 다음 아래의 사진처럼 <code>요청</code> 탭에 가셔서 RSS와 사이트맵을 제출해줍니다!</p><p><img src="14-naver.png" alt="추가 ㄱㄱ"></p><h2 id="다음"><a href="#다음" class="headerlink" title="다음"></a>다음</h2><p>다음은 <a href="https://register.search.daum.net/" rel="external nofollow noopener noreferrer" target="_blank">다음 검색 등록</a>에 들어가서 블로그 등록을 입력하시면<br>간편하게 등록할 수 있습니다!!</p><p>저는 3일정도 걸렸습니다!</p><hr><p>이것으로 블로그를 만들 수 있었는데요!  </p><p><code>username.github.io</code>에는 <code>hexo g</code>를 통해서 생성된 <code>public</code>폴더 안의 내용만 올라가니<br>프로젝트 전체를 담을 레포를 하나 더 파서 저장해두시는걸 추천합니다!</p><p>저는 이때 <code>.gitignore</code>를 사용해서 쓰고있습니다!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules&#x2F;</span><br><span class="line">public&#x2F;</span><br><span class="line">.deploy*&#x2F;</span><br><span class="line">.idea&#x2F;</span><br><span class="line">_multiconfig.yml</span><br></pre></td></tr></table></figure><p>하다가 막히시는 부분이 있으면 댓글로 남겨주세요!</p><hr><p><strong><em>Refenence</em></strong></p><ul><li><a href="https://alleyful.github.io/2019/08/10/tools/hexo/hexo-guide-03/#%EA%B2%80%EC%83%89%EC%97%94%EC%A7%84-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0" rel="external nofollow noopener noreferrer" target="_blank">https://alleyful.github.io</a></li><li><a href="https://www.holaxprogramming.com/2017/04/16/github-page-and-hexo/" rel="external nofollow noopener noreferrer" target="_blank">https://www.holaxprogramming.com</a></li></ul><p><strong><em>Thanks to</em></strong></p><ul><li>응원해주신 <a href="https://v-ais.github.io" rel="external nofollow noopener noreferrer" target="_blank">비아이즈 (Vision &amp; A.I. study, Be eyes)</a> 여러분 감사합니다!</li><li>오타 잡아주신 Anna님 감사합니다!</li><li>오타와 깨진 텍스트 잡아주신 <a href="https://sihan-son.github.io/" rel="external nofollow noopener noreferrer" target="_blank">시한님</a> 감사합니다!</li></ul>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/03/06/build-blog-with-hexo-github/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Level 1] 프로그래머스 수박수박수박수박수박수? 문제풀이 🍉👏</title>
      <link>http://kinetic27.github.io/2020/03/05/watermelon-or-clap/</link>
      <guid>http://kinetic27.github.io/2020/03/05/watermelon-or-clap/</guid>
      <pubDate>Thu, 05 Mar 2020 14:27:57 GMT</pubDate>
      <description>
      
        &lt;p&gt;🍉👏🍉👏🍉👏🍉👏🍉👏🍉👏🍉👏🍉👏🍉👏🍉👏&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>🍉👏🍉👏🍉👏🍉👏🍉👏🍉👏🍉👏🍉👏🍉👏🍉👏</p><a id="more"></a><hr><h1 id="문제-소개"><a href="#문제-소개" class="headerlink" title="문제 소개"></a>문제 소개</h1><p>이 <a href="https://programmers.co.kr/learn/courses/30/lessons/12922" rel="external nofollow noopener noreferrer" target="_blank">문제</a>는 <code>수박수박수박수...</code>를 출력하면 되는 문제입니다!</p><p><img src="problem.png" alt="problem"></p><hr><h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><p>처음에 10000자 이하라는것을 보고 10000자짜리 수박수박수를 만든 후 자르려고 했다가 정신 붙잡고 다시 코드를 짰습니다!</p><p>방법은 간단합니다 <code>반복</code> 돌면서 <code>[&quot;수&quot;, &quot;박&quot;]</code>에서 번갈아 꺼내면 되는거죠! 짝홀을 이용하면 번갈아서 꺼낼 수 있을 것 같습니다!!</p><p><code>joinToString</code>에 <code>mapping</code>기능이 같이 붙어있길래 어짜피 String제출이니 map 대신 써봤어요!</p><p>바로 정답 코드 보시죠</p><hr><h1 id="정답-코드"><a href="#정답-코드" class="headerlink" title="정답 코드"></a>정답 코드</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(n: <span class="type">Int</span>)</span></span>: String =</span><br><span class="line">        (<span class="number">0</span> until n).joinToString(separator = <span class="string">""</span>) &#123; arrayOf(<span class="string">"수"</span>, <span class="string">"박"</span>)[it % <span class="number">2</span>] &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>수박이냐 박수냐 그것이 문제로다 :thinking:</p><blockquote><p>출처: 프로그래머스 코딩 테스트 연습, <a href="https://programmers.co.kr/learn/challenges" rel="external nofollow noopener noreferrer" target="_blank">https://programmers.co.kr/learn/challenges</a></p></blockquote>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/03/05/watermelon-or-clap/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Level 1] 프로그래머스 서울에서 김서방 찾기 코틀린 풀이</title>
      <link>http://kinetic27.github.io/2020/03/05/find-kim-in-seoul/</link>
      <guid>http://kinetic27.github.io/2020/03/05/find-kim-in-seoul/</guid>
      <pubDate>Thu, 05 Mar 2020 14:05:29 GMT</pubDate>
      <description>
      
        &lt;p&gt;프로그래머스 서울에서 김서방 찾기 코틀린 풀이&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>프로그래머스 서울에서 김서방 찾기 코틀린 풀이</p><a id="more"></a><hr><h1 id="문제-소개"><a href="#문제-소개" class="headerlink" title="문제 소개"></a>문제 소개</h1><p>이번 <a href="https://programmers.co.kr/learn/courses/30/lessons/12919" rel="external nofollow noopener noreferrer" target="_blank">문제</a>는 <del>집나간</del> 김서방을 찾아오는 문제입니다!</p><p><img src="problem.png" alt="problem"></p><p>index 서칭하면 끝나네요</p><hr><h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><p>Linear Searching이고 뭐고 많은 서칭법이 있지만 킹갓코틀린에는 <code>.indexOf</code>라는 내장함수가 있습니다!</p><p>쉽게 끝!</p><hr><h1 id="정답-코드"><a href="#정답-코드" class="headerlink" title="정답 코드"></a>정답 코드</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">solution</span><span class="params">(seoul: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span>: String =</span><br><span class="line">        <span class="string">"김서방은 <span class="subst">$&#123;seoul.indexOf(<span class="string">"Kim"</span>)&#125;</span>에 있다"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>쉬운 문제네요! 직접 for문 돌면서 구현해도 재밌을것 같아요!</p><blockquote><p>출처: 프로그래머스 코딩 테스트 연습, <a href="https://programmers.co.kr/learn/challenges" rel="external nofollow noopener noreferrer" target="_blank">https://programmers.co.kr/learn/challenges</a></p></blockquote>]]></content:encoded>
      
      <comments>http://kinetic27.github.io/2020/03/05/find-kim-in-seoul/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
